-- üõ°Ô∏è ShieldTeam | NERO - Final Merge Ultimate Version
-- Features:
-- Auto Loop Summit + Manual TP (Support Carry Player)
-- Infinity Jump, ESP Player, Noclip
-- InfinityYield-style Fly System (PC & Mobile)
-- Anti-Reset Speed Hack with toggle
-- Fixed Auto Teleport to Player (username + display name support)
-- Enhanced Player Teleport Buttons System
-- Fake Title "Admin" (blue) toggle in Special tab
-- Rayfield UI (no key)

-- == Services & Init ==
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local StarterGui = game:GetService("StarterGui")
local TweenService = game:GetService("TweenService")

local runing = false
local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- State management
local state = {
    EnableJump = false,
    JumpPower = 50,
    running = false,
    infJump = false,
    espEnabled = false,
    noclipEnabled = false,
    flyEnabled = false,
    flySpeed = 1,
    speedHackEnabled = false,
    normalWalkSpeed = 16,
    speedHackValue = 18,
    adminTitleEnabled = false,
    tpUsername = "",
    verticalFly = 0,
    TweenSpeed = 0.32
}

-- Keep refs to cleanup
local espTable = {}
local adminGui = nil
local flyGui, ascendBtn, descendBtn = nil, nil, nil

-- == Updated Valid Coordinates ==
local toCP2 = {
    CFrame.new(-626.29, 250.10, -384.88), -- 01:44:08
    CFrame.new(-630.96, 249.43, -386.71), -- 01:44:09
    CFrame.new(-637.89, 248.65, -389.40), -- 01:44:09
    CFrame.new(-645.18, 247.91, -391.52), -- 01:44:10
    CFrame.new(-652.29, 247.16, -394.17), -- 01:44:10
    CFrame.new(-659.26, 246.44, -397.00), -- 01:44:11
    CFrame.new(-666.32, 245.95, -399.95), -- 01:44:11
    CFrame.new(-673.46, 245.54, -402.95), -- 01:44:12
    CFrame.new(-680.41, 245.13, -405.75), -- 01:44:12
    CFrame.new(-687.76, 244.65, -408.15), -- 01:44:13
    CFrame.new(-694.90, 244.12, -410.41), -- 01:44:13
    CFrame.new(-701.38, 243.56, -413.36), -- 01:44:14
    CFrame.new(-708.10, 242.46, -416.53), -- 01:44:14
    CFrame.new(-714.24, 241.31, -420.20), -- 01:44:15
    CFrame.new(-720.50, 239.91, -424.47), -- 01:44:15
    CFrame.new(-726.30, 238.18, -429.13), -- 01:44:16
    CFrame.new(-731.95, 236.13, -433.96), -- 01:44:17
    CFrame.new(-737.53, 233.89, -438.56), -- 01:44:17
    CFrame.new(-742.89, 231.44, -443.14), -- 01:44:18
    CFrame.new(-748.45, 228.59, -447.85), -- 01:44:18
    CFrame.new(-754.15, 225.52, -452.25), -- 01:44:19
    CFrame.new(-759.91, 222.23, -456.02), -- 01:44:19
    CFrame.new(-765.80, 219.25, -460.01), -- 01:44:20
    CFrame.new(-771.74, 216.45, -464.14), -- 01:44:20
    CFrame.new(-777.34, 213.48, -468.31), -- 01:44:21
    CFrame.new(-782.79, 210.14, -472.49), -- 01:44:21
    CFrame.new(-788.04, 206.55, -476.85), -- 01:44:22
    CFrame.new(-792.73, 202.41, -481.57), -- 01:44:22
    CFrame.new(-796.75, 197.97, -486.43), -- 01:44:23
    CFrame.new(-800.22, 193.49, -491.44), -- 01:44:23
    CFrame.new(-803.60, 188.93, -496.62), -- 01:44:24
    CFrame.new(-807.07, 184.54, -501.75), -- 01:44:24
    CFrame.new(-811.69, 181.20, -506.66), -- 01:44:25
    CFrame.new(-818.45, 179.02, -509.96), -- 01:44:25
    CFrame.new(-825.75, 177.97, -510.35), -- 01:44:26
    CFrame.new(-833.07, 177.96, -510.33), -- 01:44:26
    CFrame.new(-840.65, 177.96, -510.46), -- 01:44:27
    CFrame.new(-848.19, 177.99, -510.62), -- 01:44:27
    CFrame.new(-855.79, 178.27, -510.50), -- 01:44:28
    CFrame.new(-863.32, 178.60, -511.20), -- 01:44:28
    CFrame.new(-870.42, 178.98, -515.21), -- 01:44:29
    CFrame.new(-876.27, 180.15, -519.74), -- 01:44:29
    CFrame.new(-882.12, 182.00, -524.19), -- 01:44:30
    CFrame.new(-889.29, 183.72, -526.80), -- 01:44:30
    CFrame.new(-896.27, 185.26, -529.08), -- 01:44:31
    CFrame.new(-903.74, 186.61, -531.00), -- 01:44:31
    CFrame.new(-911.15, 187.63, -532.51), -- 01:44:32
    CFrame.new(-918.59, 188.55, -533.55), -- 01:44:32
    CFrame.new(-926.48, 189.27, -534.02), -- 01:44:33
    CFrame.new(-934.29, 189.36, -534.10), -- 01:44:33
    CFrame.new(-941.74, 188.67, -533.36), -- 01:44:34
    CFrame.new(-949.32, 187.94, -532.02), -- 01:44:34
    CFrame.new(-956.34, 187.36, -529.29), -- 01:44:35
    CFrame.new(-963.21, 186.94, -525.79), -- 01:44:35
    CFrame.new(-969.61, 186.93, -521.58), -- 01:44:36
    CFrame.new(-974.48, 187.03, -517.30), -- 01:44:36
    CFrame.new(-979.94, 187.59, -511.69), -- 01:44:37
    CFrame.new(-984.82, 188.28, -506.05), -- 01:44:38
    CFrame.new(-989.70, 189.10, -500.08), -- 01:44:38
    CFrame.new(-994.62, 189.89, -494.40), -- 01:44:39
    CFrame.new(-999.58, 190.67, -488.91), -- 01:44:39
    CFrame.new(-1003.82, 191.33, -482.49), -- 01:44:40
    CFrame.new(-1007.71, 192.03, -475.99), -- 01:44:40
    CFrame.new(-1012.82, 193.58, -470.42), -- 01:44:41
    CFrame.new(-1016.17, 194.87, -463.84), -- 01:44:41
    CFrame.new(-1019.12, 196.19, -456.93), -- 01:44:42
    CFrame.new(-1022.42, 197.85, -450.38), -- 01:44:42
    CFrame.new(-1026.11, 200.66, -444.58), -- 01:44:43
    CFrame.new(-1029.46, 203.80, -438.52), -- 01:44:43
    CFrame.new(-1034.11, 207.26, -433.52), -- 01:44:44
    CFrame.new(-1039.68, 211.11, -430.13), -- 01:44:44
    CFrame.new(-1045.42, 215.46, -427.74), -- 01:44:45
    CFrame.new(-1050.94, 220.24, -427.19), -- 01:44:45
    CFrame.new(-1055.56, 225.79, -429.83), -- 01:44:46
    CFrame.new(-1059.68, 231.70, -431.08), -- 01:44:46
    CFrame.new(-1064.15, 237.58, -433.14), -- 01:44:47
    CFrame.new(-1068.82, 242.67, -436.37), -- 01:44:47
    CFrame.new(-1074.20, 246.00, -441.07), -- 01:44:48
    CFrame.new(-1080.01, 245.69, -445.91), -- 01:44:48
    CFrame.new(-1086.86, 246.64, -448.85), -- 01:44:49
    CFrame.new(-1094.27, 248.16, -450.99), -- 01:44:49
    CFrame.new(-1101.76, 249.59, -452.72), -- 01:44:50
    CFrame.new(-1109.08, 251.07, -454.48), -- 01:44:50
    CFrame.new(-1115.66, 253.79, -456.45), -- 01:44:51
    CFrame.new(-1122.24, 256.89, -458.47), -- 01:44:51
    CFrame.new(-1127.36, 261.45, -460.75), -- 01:44:52
    CFrame.new(-1133.83, 264.71, -462.89), -- 01:44:52
    CFrame.new(-1141.13, 265.41, -465.19), -- 01:44:53
    CFrame.new(-1148.84, 264.82, -467.11), -- 01:44:53
    CFrame.new(-1156.41, 263.31, -468.63), -- 01:44:54
    CFrame.new(-1163.51, 261.84, -470.29), -- 01:44:54
    CFrame.new(-1171.06, 261.04, -472.31), -- 01:44:55
    CFrame.new(-1178.17, 260.47, -474.70), -- 01:44:55
    CFrame.new(-1185.30, 260.19, -477.52), -- 01:44:56
    CFrame.new(-1192.40, 260.60, -480.65), -- 01:44:56
    CFrame.new(-1199.29, 261.32, -483.79), -- 01:44:57
}
local toCP3 = {
    CFrame.new(-1203.82, 261.52, -486.59), -- 01:45:23
    CFrame.new(-1208.91, 261.65, -487.33), -- 01:45:24
    CFrame.new(-1216.31, 262.38, -488.39), -- 01:45:24
    CFrame.new(-1223.40, 263.14, -491.66), -- 01:45:25
    CFrame.new(-1225.94, 263.97, -498.71), -- 01:45:25
    CFrame.new(-1226.53, 264.84, -506.25), -- 01:45:26
    CFrame.new(-1226.84, 266.14, -513.92), -- 01:45:26
    CFrame.new(-1227.61, 267.54, -521.50), -- 01:45:27
    CFrame.new(-1228.42, 269.02, -528.78), -- 01:45:27
    CFrame.new(-1229.47, 271.30, -536.13), -- 01:45:28
    CFrame.new(-1230.46, 274.00, -542.96), -- 01:45:28
    CFrame.new(-1231.40, 277.12, -549.66), -- 01:45:29
    CFrame.new(-1232.01, 280.90, -556.44), -- 01:45:29
    CFrame.new(-1231.33, 284.87, -562.40), -- 01:45:30
    CFrame.new(-1231.23, 286.99, -569.58), -- 01:45:30
    CFrame.new(-1233.17, 287.74, -576.89), -- 01:45:31
    CFrame.new(-1234.32, 288.14, -584.16), -- 01:45:31
    CFrame.new(-1234.43, 288.56, -591.96), -- 01:45:32
    CFrame.new(-1234.41, 288.81, -599.51), -- 01:45:32
    CFrame.new(-1233.29, 289.06, -606.97), -- 01:45:33
    CFrame.new(-1233.84, 288.95, -614.53), -- 01:45:33
    CFrame.new(-1237.23, 288.79, -621.25), -- 01:45:34
    CFrame.new(-1242.73, 289.05, -626.48), -- 01:45:34
    CFrame.new(-1249.14, 289.42, -631.14), -- 01:45:35
    CFrame.new(-1254.86, 289.78, -636.06), -- 01:45:35
    CFrame.new(-1260.20, 290.14, -641.23), -- 01:45:36
    CFrame.new(-1265.04, 290.65, -647.29), -- 01:45:36
    CFrame.new(-1268.91, 291.40, -653.95), -- 01:45:37
    CFrame.new(-1272.71, 292.16, -660.36), -- 01:45:37
    CFrame.new(-1277.28, 293.68, -666.40), -- 01:45:38
    CFrame.new(-1282.51, 296.19, -671.24), -- 01:45:38
    CFrame.new(-1288.24, 300.11, -674.99), -- 01:45:39
    CFrame.new(-1291.87, 303.83, -680.89), -- 01:45:39
    CFrame.new(-1295.17, 307.33, -686.41), -- 01:45:40
    CFrame.new(-1297.10, 311.44, -683.01), -- 01:45:40
    CFrame.new(-1295.98, 315.43, -680.05), -- 01:45:41
    CFrame.new(-1295.16, 320.40, -675.91), -- 01:45:42
    CFrame.new(-1296.80, 323.63, -669.67), -- 01:45:42
    CFrame.new(-1302.60, 326.21, -665.47), -- 01:45:43
    CFrame.new(-1309.48, 329.11, -663.90), -- 01:45:43
    CFrame.new(-1316.39, 332.02, -663.90), -- 01:45:44
    CFrame.new(-1323.60, 334.88, -663.59), -- 01:45:44
    CFrame.new(-1330.75, 337.67, -664.36), -- 01:45:45
    CFrame.new(-1337.30, 340.37, -667.16), -- 01:45:45
    CFrame.new(-1343.06, 342.82, -671.55), -- 01:45:46
    CFrame.new(-1348.25, 345.08, -676.75), -- 01:45:46
    CFrame.new(-1353.23, 347.32, -682.07), -- 01:45:47
    CFrame.new(-1357.79, 349.57, -687.75), -- 01:45:47
    CFrame.new(-1362.23, 351.89, -693.74), -- 01:45:48
    CFrame.new(-1366.60, 354.22, -699.48), -- 01:45:48
    CFrame.new(-1368.35, 357.30, -706.00), -- 01:45:49
    CFrame.new(-1364.70, 360.36, -711.73), -- 01:45:49
    CFrame.new(-1361.12, 363.96, -716.52), -- 01:45:50
    CFrame.new(-1361.93, 367.95, -713.34), -- 01:45:50
    CFrame.new(-1362.39, 371.04, -706.37), -- 01:45:51
    CFrame.new(-1365.74, 375.10, -701.44), -- 01:45:51
    CFrame.new(-1370.90, 380.58, -700.84), -- 01:45:52
    CFrame.new(-1374.11, 386.67, -701.34), -- 01:45:52
    CFrame.new(-1376.03, 392.82, -703.25), -- 01:45:53
    CFrame.new(-1380.87, 397.67, -706.45), -- 01:45:53
    CFrame.new(-1385.65, 402.77, -709.70), -- 01:45:54
    CFrame.new(-1390.92, 407.85, -711.61), -- 01:45:55
    CFrame.new(-1396.25, 412.97, -713.49), -- 01:45:55
    CFrame.new(-1401.67, 418.17, -715.40), -- 01:45:56
    CFrame.new(-1407.13, 423.38, -717.18), -- 01:45:56
    CFrame.new(-1412.70, 428.63, -718.71), -- 01:45:57
    CFrame.new(-1418.17, 433.69, -721.13), -- 01:45:57
    CFrame.new(-1423.70, 437.52, -724.87), -- 01:45:58
    CFrame.new(-1429.09, 441.10, -728.67), -- 01:45:58
    CFrame.new(-1434.91, 444.52, -732.52), -- 01:45:59
    CFrame.new(-1440.61, 447.65, -736.54), -- 01:45:59
    CFrame.new(-1446.15, 450.49, -740.74), -- 01:46:00
    CFrame.new(-1451.89, 453.02, -745.12), -- 01:46:00
    CFrame.new(-1457.75, 455.69, -749.39), -- 01:46:01
    CFrame.new(-1463.87, 458.66, -753.05), -- 01:46:01
    CFrame.new(-1470.52, 461.71, -755.13), -- 01:46:02
    CFrame.new(-1475.91, 464.31, -756.40), -- 01:46:02
    CFrame.new(-1482.58, 467.56, -758.15), -- 01:46:03
    CFrame.new(-1489.42, 470.72, -760.31), -- 01:46:03
    CFrame.new(-1495.89, 473.72, -763.61), -- 01:46:04
    CFrame.new(-1501.26, 476.76, -768.35), -- 01:46:04
    CFrame.new(-1505.61, 480.17, -773.61), -- 01:46:05
    CFrame.new(-1509.65, 484.38, -778.43), -- 01:46:05
    CFrame.new(-1513.61, 489.23, -782.69), -- 01:46:06
    CFrame.new(-1517.45, 494.60, -786.55), -- 01:46:06
    CFrame.new(-1520.80, 500.17, -790.61), -- 01:46:07
    CFrame.new(-1523.03, 505.74, -795.21), -- 01:46:07
    CFrame.new(-1524.76, 511.37, -800.00), -- 01:46:08
    CFrame.new(-1524.58, 517.27, -804.90), -- 01:46:08
    CFrame.new(-1523.83, 522.50, -810.62), -- 01:46:09
    CFrame.new(-1521.51, 527.34, -815.46), -- 01:46:09
    CFrame.new(-1518.24, 531.36, -821.09), -- 01:46:10
    CFrame.new(-1513.08, 533.27, -826.57), -- 01:46:10
    CFrame.new(-1507.76, 534.49, -832.12), -- 01:46:11
    CFrame.new(-1502.31, 535.32, -837.68), -- 01:46:11
    CFrame.new(-1496.21, 535.78, -842.36), -- 01:46:12
    CFrame.new(-1489.69, 536.13, -846.66), -- 01:46:12
    CFrame.new(-1483.10, 536.40, -850.23), -- 01:46:13
    CFrame.new(-1476.09, 536.57, -853.24), -- 01:46:13
    CFrame.new(-1468.70, 536.73, -855.74), -- 01:46:14
    CFrame.new(-1461.26, 536.96, -857.89), -- 01:46:15
    CFrame.new(-1453.97, 537.20, -860.10), -- 01:46:15
    CFrame.new(-1446.73, 537.43, -862.47), -- 01:46:16
    CFrame.new(-1439.49, 537.66, -864.85), -- 01:46:16
    CFrame.new(-1432.30, 537.89, -867.16), -- 01:46:17
    CFrame.new(-1425.09, 538.12, -869.64), -- 01:46:17
    CFrame.new(-1417.99, 538.34, -872.24), -- 01:46:18
    CFrame.new(-1411.07, 538.53, -876.22), -- 01:46:18
    CFrame.new(-1405.39, 539.09, -881.11), -- 01:46:19
    CFrame.new(-1400.40, 540.09, -886.72), -- 01:46:19
    CFrame.new(-1397.41, 542.14, -893.03), -- 01:46:20
    CFrame.new(-1395.57, 545.43, -900.04), -- 01:46:20
    CFrame.new(-1396.38, 549.36, -906.30), -- 01:46:21
    CFrame.new(-1397.71, 553.58, -912.74), -- 01:46:21
    CFrame.new(-1398.97, 558.14, -918.48), -- 01:46:22
    CFrame.new(-1399.32, 562.97, -924.27), -- 01:46:22
    CFrame.new(-1399.20, 567.76, -930.41), -- 01:46:23
    CFrame.new(-1399.05, 572.03, -936.58), -- 01:46:23
    CFrame.new(-1399.10, 576.16, -943.79), -- 01:46:24
    CFrame.new(-1400.19, 578.51, -950.51), -- 01:46:24
}
local toCP4 = {
    CFrame.new(-1399.79, 578.40, -953.28), -- 01:47:54
    CFrame.new(-1398.19, 578.91, -958.07), -- 01:47:55
    CFrame.new(-1396.72, 579.75, -965.38), -- 01:47:56
    CFrame.new(-1397.50, 581.18, -972.86), -- 01:47:56
    CFrame.new(-1398.12, 582.50, -980.51), -- 01:47:57
    CFrame.new(-1399.29, 583.00, -987.92), -- 01:47:57
    CFrame.new(-1401.01, 583.57, -995.44), -- 01:47:58
    CFrame.new(-1403.77, 584.13, -1002.39), -- 01:47:58
    CFrame.new(-1407.58, 584.70, -1009.11), -- 01:47:59
    CFrame.new(-1411.80, 585.36, -1015.57), -- 01:47:59
    CFrame.new(-1416.03, 586.03, -1021.80), -- 01:48:00
    CFrame.new(-1420.71, 586.74, -1027.85), -- 01:48:00
    CFrame.new(-1425.66, 587.51, -1033.52), -- 01:48:01
    CFrame.new(-1430.96, 588.29, -1039.03), -- 01:48:01
    CFrame.new(-1436.14, 589.03, -1044.41), -- 01:48:02
    CFrame.new(-1441.31, 589.50, -1049.84), -- 01:48:02
    CFrame.new(-1446.60, 589.94, -1055.48), -- 01:48:03
    CFrame.new(-1451.33, 590.36, -1061.28), -- 01:48:03
    CFrame.new(-1456.40, 590.81, -1067.13), -- 01:48:04
    CFrame.new(-1461.49, 591.26, -1072.97), -- 01:48:04
    CFrame.new(-1466.41, 591.70, -1078.86), -- 01:48:05
    CFrame.new(-1471.32, 592.14, -1084.67), -- 01:48:05
    CFrame.new(-1476.30, 592.58, -1090.52), -- 01:48:06
    CFrame.new(-1481.32, 593.03, -1096.40), -- 01:48:06
    CFrame.new(-1486.21, 593.46, -1102.16), -- 01:48:07
    CFrame.new(-1490.74, 593.60, -1108.26), -- 01:48:07
    CFrame.new(-1495.24, 593.06, -1114.50), -- 01:48:08
    CFrame.new(-1500.06, 592.46, -1120.37), -- 01:48:08
    CFrame.new(-1505.14, 591.91, -1125.94), -- 01:48:09
    CFrame.new(-1510.27, 591.48, -1131.47), -- 01:48:09
    CFrame.new(-1515.53, 591.15, -1137.04), -- 01:48:10
    CFrame.new(-1520.71, 591.17, -1142.54), -- 01:48:11
    CFrame.new(-1526.02, 591.18, -1148.18), -- 01:48:11
    CFrame.new(-1531.30, 591.10, -1153.78), -- 01:48:12
    CFrame.new(-1536.37, 590.97, -1159.38), -- 01:48:12
    CFrame.new(-1541.45, 590.74, -1165.16), -- 01:48:13
    CFrame.new(-1546.51, 590.48, -1170.95), -- 01:48:13
    CFrame.new(-1551.39, 590.15, -1176.64), -- 01:48:14
    CFrame.new(-1556.34, 589.73, -1182.43), -- 01:48:14
    CFrame.new(-1561.18, 589.24, -1188.23), -- 01:48:15
    CFrame.new(-1565.67, 588.73, -1194.06), -- 01:48:15
    CFrame.new(-1570.26, 588.21, -1199.98), -- 01:48:16
    CFrame.new(-1574.54, 587.69, -1206.30), -- 01:48:16
    CFrame.new(-1576.84, 587.26, -1213.48), -- 01:48:17
    CFrame.new(-1577.32, 586.85, -1220.97), -- 01:48:17
    CFrame.new(-1575.02, 586.51, -1228.07), -- 01:48:18
    CFrame.new(-1570.97, 586.63, -1234.38), -- 01:48:18
    CFrame.new(-1565.66, 587.49, -1239.71), -- 01:48:19
    CFrame.new(-1560.06, 588.70, -1244.63), -- 01:48:19
    CFrame.new(-1554.47, 589.95, -1249.47), -- 01:48:20
    CFrame.new(-1548.58, 591.51, -1253.90), -- 01:48:20
    CFrame.new(-1542.55, 593.24, -1258.32), -- 01:48:21
    CFrame.new(-1536.44, 594.90, -1262.82), -- 01:48:21
    CFrame.new(-1530.39, 596.25, -1267.29), -- 01:48:22
    CFrame.new(-1524.13, 597.51, -1271.80), -- 01:48:22
    CFrame.new(-1517.92, 598.57, -1275.99), -- 01:48:23
    CFrame.new(-1511.67, 600.38, -1279.87), -- 01:48:23
    CFrame.new(-1505.86, 604.27, -1282.98), -- 01:48:24
    CFrame.new(-1500.59, 608.81, -1286.24), -- 01:48:24
    CFrame.new(-1495.66, 613.65, -1289.16), -- 01:48:25
    CFrame.new(-1490.88, 618.96, -1291.93), -- 01:48:25
    CFrame.new(-1486.97, 624.99, -1293.84), -- 01:48:26
    CFrame.new(-1485.67, 635.96, -1293.07), -- 01:48:26
    CFrame.new(-1489.39, 642.49, -1289.02), -- 01:48:27
    CFrame.new(-1494.97, 646.48, -1285.24), -- 01:48:27
    CFrame.new(-1501.76, 648.61, -1282.48), -- 01:48:28
    CFrame.new(-1508.86, 649.77, -1279.67), -- 01:48:28
    CFrame.new(-1515.87, 650.67, -1277.11), -- 01:48:29
    CFrame.new(-1522.94, 651.39, -1274.18), -- 01:48:29
    CFrame.new(-1529.68, 651.87, -1270.89), -- 01:48:30
    CFrame.new(-1536.75, 652.23, -1267.86), -- 01:48:30
    CFrame.new(-1544.04, 652.32, -1265.01), -- 01:48:31
    CFrame.new(-1551.03, 652.22, -1261.97), -- 01:48:31
    CFrame.new(-1557.98, 652.13, -1258.69), -- 01:48:32
    CFrame.new(-1564.73, 652.43, -1255.41), -- 01:48:32
    CFrame.new(-1571.55, 653.35, -1252.08), -- 01:48:33
    CFrame.new(-1578.25, 655.08, -1248.84), -- 01:48:33
    CFrame.new(-1584.73, 657.03, -1245.77), -- 01:48:34
    CFrame.new(-1590.82, 658.88, -1241.75), -- 01:48:34
    CFrame.new(-1595.47, 660.65, -1236.19), -- 01:48:35
    CFrame.new(-1599.90, 667.65, -1231.82), -- 01:48:35
    CFrame.new(-1605.16, 680.20, -1228.17), -- 01:48:36
    CFrame.new(-1612.46, 678.75, -1225.43), -- 01:48:36
    CFrame.new(-1619.71, 678.90, -1225.38), -- 01:48:37
    CFrame.new(-1626.61, 679.29, -1228.92), -- 01:48:37
    CFrame.new(-1632.65, 679.34, -1233.56), -- 01:48:38
    CFrame.new(-1636.27, 679.09, -1240.26), -- 01:48:38
    CFrame.new(-1639.04, 678.84, -1247.21), -- 01:48:39
    CFrame.new(-1640.48, 678.52, -1254.57), -- 01:48:39
    CFrame.new(-1641.35, 677.76, -1262.32), -- 01:48:40
    CFrame.new(-1642.06, 676.94, -1269.86), -- 01:48:41
    CFrame.new(-1642.71, 676.40, -1277.47), -- 01:48:41
    CFrame.new(-1643.39, 676.19, -1285.05), -- 01:48:42
    CFrame.new(-1643.64, 675.99, -1292.61), -- 01:48:42
    CFrame.new(-1644.80, 676.25, -1300.24), -- 01:48:43
    CFrame.new(-1647.52, 677.17, -1307.05), -- 01:48:43
    CFrame.new(-1651.68, 681.39, -1306.63), -- 01:48:44
    CFrame.new(-1652.37, 686.56, -1303.68), -- 01:48:44
    CFrame.new(-1654.16, 691.63, -1300.99), -- 01:48:45
    CFrame.new(-1652.62, 695.58, -1303.71), -- 01:48:45
    CFrame.new(-1651.93, 696.06, -1310.92), -- 01:48:46
    CFrame.new(-1652.47, 700.21, -1313.74), -- 01:48:47
    CFrame.new(-1650.17, 700.96, -1319.89), -- 01:48:48
    CFrame.new(-1647.92, 701.69, -1326.73), -- 01:48:48
    CFrame.new(-1645.35, 702.70, -1333.95), -- 01:48:49
    CFrame.new(-1642.87, 703.83, -1341.00), -- 01:48:49
    CFrame.new(-1639.93, 705.38, -1348.48), -- 01:48:50
    CFrame.new(-1638.08, 707.07, -1353.42), -- 01:48:51
    CFrame.new(-1635.59, 709.26, -1360.51), -- 01:48:51
    CFrame.new(-1632.10, 710.90, -1367.25), -- 01:48:52
    CFrame.new(-1627.00, 712.38, -1372.89), -- 01:48:52
    CFrame.new(-1621.35, 713.66, -1378.06), -- 01:48:53
    CFrame.new(-1615.51, 714.87, -1383.00), -- 01:48:53
    CFrame.new(-1609.62, 716.00, -1387.74), -- 01:48:54
    CFrame.new(-1603.74, 716.90, -1392.52), -- 01:48:54
    CFrame.new(-1598.13, 717.69, -1397.53), -- 01:48:55
    CFrame.new(-1592.92, 718.47, -1402.87), -- 01:48:55
    CFrame.new(-1587.32, 719.26, -1408.01), -- 01:48:56
    CFrame.new(-1581.33, 722.65, -1412.33), -- 01:48:56
    CFrame.new(-1575.84, 724.60, -1417.43), -- 01:48:57
    CFrame.new(-1570.17, 725.72, -1422.43), -- 01:48:57
    CFrame.new(-1563.98, 727.84, -1426.90), -- 01:48:58
    CFrame.new(-1557.65, 729.88, -1430.96), -- 01:48:58
    CFrame.new(-1551.77, 730.66, -1435.55), -- 01:48:59
    CFrame.new(-1545.98, 731.47, -1440.45), -- 01:48:59
    CFrame.new(-1540.30, 732.76, -1445.28), -- 01:49:00
    CFrame.new(-1534.46, 734.31, -1450.56), -- 01:49:00
    CFrame.new(-1528.81, 735.19, -1455.84), -- 01:49:01
    CFrame.new(-1523.22, 735.74, -1461.18), -- 01:49:01
    CFrame.new(-1517.67, 736.32, -1466.36), -- 01:49:02
    CFrame.new(-1511.08, 737.44, -1469.90), -- 01:49:02
    CFrame.new(-1504.24, 739.60, -1471.81), -- 01:49:03
    CFrame.new(-1498.59, 743.37, -1470.58), -- 01:49:03
    CFrame.new(-1499.38, 747.10, -1464.95), -- 01:49:04
    CFrame.new(-1502.98, 750.41, -1459.18), -- 01:49:04
    CFrame.new(-1507.83, 753.30, -1454.23), -- 01:49:05
    CFrame.new(-1513.24, 756.00, -1449.08), -- 01:49:05
    CFrame.new(-1518.51, 758.37, -1444.16), -- 01:49:06
    CFrame.new(-1523.98, 760.32, -1439.18), -- 01:49:06
    CFrame.new(-1529.62, 761.96, -1434.09), -- 01:49:07
    CFrame.new(-1535.06, 763.05, -1429.00), -- 01:49:07
    CFrame.new(-1540.40, 763.92, -1423.72), -- 01:49:08
    CFrame.new(-1545.69, 764.82, -1418.12), -- 01:49:08
    CFrame.new(-1550.75, 765.75, -1412.42), -- 01:49:09
    CFrame.new(-1555.68, 766.99, -1406.60), -- 01:49:09
    CFrame.new(-1560.60, 768.40, -1400.81), -- 01:49:10
    CFrame.new(-1565.46, 770.15, -1395.22), -- 01:49:10
    CFrame.new(-1570.29, 771.87, -1389.73), -- 01:49:11
    CFrame.new(-1575.35, 773.36, -1384.21), -- 01:49:11
    CFrame.new(-1580.53, 774.74, -1378.87), -- 01:49:12
    CFrame.new(-1585.72, 776.14, -1373.37), -- 01:49:12
    CFrame.new(-1590.94, 777.65, -1368.04), -- 01:49:13
    CFrame.new(-1595.98, 779.53, -1362.77), -- 01:49:13
    CFrame.new(-1600.81, 782.63, -1357.62), -- 01:49:14
    CFrame.new(-1605.09, 785.93, -1352.46), -- 01:49:14
    CFrame.new(-1609.44, 789.77, -1347.85), -- 01:49:15
    CFrame.new(-1614.14, 795.09, -1345.93), -- 01:49:15
    CFrame.new(-1615.56, 800.14, -1346.31), -- 01:49:16
    CFrame.new(-1615.50, 806.29, -1348.26), -- 01:49:17
    CFrame.new(-1618.02, 817.79, -1349.78), -- 01:49:17
    CFrame.new(-1624.37, 821.89, -1352.24), -- 01:49:18
    CFrame.new(-1631.37, 823.54, -1355.05), -- 01:49:18
    CFrame.new(-1638.51, 824.27, -1357.51), -- 01:49:19
    CFrame.new(-1645.75, 824.52, -1360.04), -- 01:49:19
    CFrame.new(-1652.98, 824.14, -1362.65), -- 01:49:20
    CFrame.new(-1659.80, 823.08, -1366.13), -- 01:49:20
    CFrame.new(-1665.69, 821.20, -1370.50), -- 01:49:21
    CFrame.new(-1670.69, 820.05, -1374.46), -- 01:49:21
    CFrame.new(-1676.55, 819.50, -1379.47), -- 01:49:22
    CFrame.new(-1682.19, 818.49, -1384.38), -- 01:49:22
    CFrame.new(-1687.94, 817.19, -1389.40), -- 01:49:23
    CFrame.new(-1693.79, 816.32, -1394.30), -- 01:49:23
    CFrame.new(-1699.71, 817.10, -1398.84), -- 01:49:24
}
local toFinish = {
    CFrame.new(-1700.66, 816.43, -1399.55), -- 01:49:45
    CFrame.new(-1705.12, 816.78, -1402.05), -- 01:49:46
    CFrame.new(-1712.25, 817.79, -1404.57), -- 01:49:46
    CFrame.new(-1719.06, 818.90, -1408.02), -- 01:49:47
    CFrame.new(-1725.56, 819.29, -1411.81), -- 01:49:47
    CFrame.new(-1732.08, 819.35, -1415.65), -- 01:49:48
    CFrame.new(-1738.58, 819.10, -1419.56), -- 01:49:48
    CFrame.new(-1745.06, 818.90, -1423.64), -- 01:49:49
    CFrame.new(-1751.64, 819.24, -1427.80), -- 01:49:49
    CFrame.new(-1758.41, 819.61, -1431.91), -- 01:49:50
    CFrame.new(-1765.17, 819.93, -1435.82), -- 01:49:50
    CFrame.new(-1771.95, 820.19, -1439.46), -- 01:49:51
    CFrame.new(-1778.92, 820.13, -1442.60), -- 01:49:51
    CFrame.new(-1786.01, 819.83, -1445.46), -- 01:49:52
    CFrame.new(-1793.17, 818.86, -1447.25), -- 01:49:52
    CFrame.new(-1799.73, 816.47, -1447.90), -- 01:49:53
    CFrame.new(-1806.30, 813.16, -1447.58), -- 01:49:54
    CFrame.new(-1812.79, 809.24, -1446.72), -- 01:49:54
    CFrame.new(-1819.26, 805.09, -1446.19), -- 01:49:55
    CFrame.new(-1825.58, 800.98, -1445.72), -- 01:49:55
    CFrame.new(-1831.97, 796.96, -1445.48), -- 01:49:56
    CFrame.new(-1838.60, 793.26, -1445.33), -- 01:49:56
    CFrame.new(-1845.44, 789.95, -1445.24), -- 01:49:57
    CFrame.new(-1852.55, 787.13, -1445.40), -- 01:49:57
    CFrame.new(-1859.63, 783.88, -1445.54), -- 01:49:58
    CFrame.new(-1866.36, 780.40, -1445.62), -- 01:49:58
    CFrame.new(-1873.03, 776.53, -1445.61), -- 01:49:59
    CFrame.new(-1879.56, 772.62, -1445.48), -- 01:49:59
    CFrame.new(-1885.48, 769.75, -1448.96), -- 01:50:00
    CFrame.new(-1888.56, 767.07, -1455.14), -- 01:50:00
    CFrame.new(-1886.53, 763.85, -1461.27), -- 01:50:01
    CFrame.new(-1879.71, 757.77, -1464.98), -- 01:50:01
    CFrame.new(-1872.08, 756.07, -1467.49), -- 01:50:02
    CFrame.new(-1864.76, 756.61, -1469.26), -- 01:50:02
    CFrame.new(-1857.17, 755.81, -1471.05), -- 01:50:03
    CFrame.new(-1849.53, 753.97, -1473.71), -- 01:50:03
    CFrame.new(-1844.89, 752.67, -1475.89), -- 01:50:04
    CFrame.new(-1838.84, 750.75, -1480.39), -- 01:50:04
    CFrame.new(-1835.73, 748.80, -1486.90), -- 01:50:05
    CFrame.new(-1834.38, 747.03, -1494.08), -- 01:50:05
    CFrame.new(-1834.79, 746.14, -1501.73), -- 01:50:06
    CFrame.new(-1836.47, 746.30, -1509.11), -- 01:50:06
    CFrame.new(-1838.00, 746.56, -1516.52), -- 01:50:07
    CFrame.new(-1839.72, 746.85, -1524.51), -- 01:50:07
    CFrame.new(-1841.56, 747.24, -1532.14), -- 01:50:08
    CFrame.new(-1844.17, 747.92, -1539.13), -- 01:50:08
    CFrame.new(-1847.31, 748.91, -1545.95), -- 01:50:09
    CFrame.new(-1851.97, 751.21, -1551.36), -- 01:50:09
    CFrame.new(-1856.42, 754.33, -1556.52), -- 01:50:10
    CFrame.new(-1860.28, 758.05, -1561.82), -- 01:50:10
    CFrame.new(-1864.01, 761.91, -1567.41), -- 01:50:11
    CFrame.new(-1868.00, 765.72, -1572.77), -- 01:50:11
    CFrame.new(-1872.33, 769.32, -1577.73), -- 01:50:12
    CFrame.new(-1876.79, 772.94, -1582.65), -- 01:50:12
    CFrame.new(-1881.30, 776.63, -1587.68), -- 01:50:13
    CFrame.new(-1885.73, 779.50, -1592.63), -- 01:50:13
    CFrame.new(-1890.23, 783.13, -1597.50), -- 01:50:14
    CFrame.new(-1894.93, 786.71, -1602.36), -- 01:50:14
    CFrame.new(-1898.99, 788.75, -1605.95), -- 01:50:15
    CFrame.new(-1904.45, 792.01, -1610.60), -- 01:50:16
    CFrame.new(-1909.52, 795.69, -1614.88), -- 01:50:16
    CFrame.new(-1914.56, 799.59, -1619.07), -- 01:50:17
    CFrame.new(-1919.97, 803.47, -1622.77), -- 01:50:17
    CFrame.new(-1925.39, 807.51, -1626.80), -- 01:50:18
    CFrame.new(-1929.71, 811.01, -1630.25), -- 01:50:18
    CFrame.new(-1934.66, 815.30, -1634.27), -- 01:50:19
    CFrame.new(-1939.44, 819.29, -1638.50), -- 01:50:19
    CFrame.new(-1944.16, 823.01, -1643.11), -- 01:50:20
    CFrame.new(-1948.86, 826.55, -1647.77), -- 01:50:20
    CFrame.new(-1953.57, 830.08, -1652.63), -- 01:50:21
    CFrame.new(-1958.32, 833.40, -1657.54), -- 01:50:21
    CFrame.new(-1963.45, 836.25, -1662.72), -- 01:50:22
    CFrame.new(-1968.52, 838.97, -1667.84), -- 01:50:22
    CFrame.new(-1973.53, 841.46, -1672.84), -- 01:50:23
    CFrame.new(-1978.98, 843.83, -1677.75), -- 01:50:23
    CFrame.new(-1985.19, 845.69, -1682.04), -- 01:50:24
    CFrame.new(-1989.64, 846.35, -1685.08), -- 01:50:24
    CFrame.new(-1995.63, 846.88, -1690.03), -- 01:50:25
    CFrame.new(-2000.98, 847.85, -1695.35), -- 01:50:25
    CFrame.new(-2005.43, 849.60, -1701.28), -- 01:50:26
    CFrame.new(-2009.87, 852.05, -1705.65), -- 01:50:26
    CFrame.new(-2014.31, 852.17, -1712.03), -- 01:50:27
    CFrame.new(-2018.47, 852.42, -1718.13), -- 01:50:27
    CFrame.new(-2023.16, 853.74, -1724.11), -- 01:50:28
    CFrame.new(-2028.58, 854.94, -1729.82), -- 01:50:28
    CFrame.new(-2033.75, 855.76, -1735.45), -- 01:50:29
    CFrame.new(-2038.41, 858.69, -1740.89), -- 01:50:29
    CFrame.new(-2039.23, 862.67, -1746.90), -- 01:50:30
    CFrame.new(-2038.14, 867.88, -1752.13), -- 01:50:31
    CFrame.new(-2038.22, 873.37, -1757.61), -- 01:50:31
    CFrame.new(-2039.57, 878.93, -1762.68), -- 01:50:32
    CFrame.new(-2044.09, 884.46, -1764.99), -- 01:50:32
    CFrame.new(-2049.47, 889.41, -1763.34), -- 01:50:33
    CFrame.new(-2055.11, 894.61, -1761.87), -- 01:50:33
    CFrame.new(-2061.52, 899.26, -1760.34), -- 01:50:34
    CFrame.new(-2068.49, 902.48, -1759.89), -- 01:50:34
    CFrame.new(-2075.39, 905.95, -1758.13), -- 01:50:35
    CFrame.new(-2081.80, 909.25, -1756.09), -- 01:50:35
    CFrame.new(-2088.56, 912.70, -1754.21), -- 01:50:36
    CFrame.new(-2095.37, 915.81, -1752.37), -- 01:50:36
    CFrame.new(-2101.94, 918.65, -1750.34), -- 01:50:37
    CFrame.new(-2108.61, 921.52, -1748.01), -- 01:50:37
    CFrame.new(-2115.37, 924.18, -1745.61), -- 01:50:38
    CFrame.new(-2120.60, 925.07, -1743.81), -- 01:50:38
    CFrame.new(-2127.24, 925.54, -1741.18), -- 01:50:39
    CFrame.new(-2134.18, 926.01, -1737.53), -- 01:50:39
    CFrame.new(-2140.51, 925.07, -1733.10), -- 01:50:40
    CFrame.new(-2147.51, 924.42, -1729.81), -- 01:50:40
    CFrame.new(-2154.62, 926.18, -1730.18), -- 01:50:41
    CFrame.new(-2161.76, 928.87, -1731.06), -- 01:50:41
    CFrame.new(-2168.73, 931.58, -1732.31), -- 01:50:42
    CFrame.new(-2174.36, 935.24, -1736.22), -- 01:50:42
    CFrame.new(-2179.90, 939.23, -1740.01), -- 01:50:43
    CFrame.new(-2183.56, 942.29, -1743.02), -- 01:50:43
    CFrame.new(-2189.61, 946.58, -1745.26), -- 01:50:44
    CFrame.new(-2196.02, 950.83, -1747.30), -- 01:50:44
    CFrame.new(-2202.29, 954.64, -1749.17), -- 01:50:45
    CFrame.new(-2208.79, 958.53, -1751.03), -- 01:50:46
    CFrame.new(-2215.07, 962.35, -1753.52), -- 01:50:46
    CFrame.new(-2221.27, 966.11, -1756.39), -- 01:50:47
    CFrame.new(-2226.98, 969.91, -1759.53), -- 01:50:47
    CFrame.new(-2232.45, 974.05, -1762.96), -- 01:50:48
    CFrame.new(-2237.65, 978.50, -1766.58), -- 01:50:48
    CFrame.new(-2242.95, 982.57, -1770.33), -- 01:50:49
    CFrame.new(-2246.72, 985.31, -1773.01), -- 01:50:49
    CFrame.new(-2251.83, 989.24, -1776.80), -- 01:50:50
    CFrame.new(-2256.91, 993.27, -1780.59), -- 01:50:50
    CFrame.new(-2262.39, 997.47, -1784.25), -- 01:50:51
    CFrame.new(-2267.92, 1001.66, -1787.84), -- 01:50:51
    CFrame.new(-2273.63, 1005.72, -1791.20), -- 01:50:52
    CFrame.new(-2279.40, 1009.68, -1794.37), -- 01:50:52
    CFrame.new(-2284.91, 1013.53, -1797.69), -- 01:50:53
    CFrame.new(-2290.32, 1017.34, -1801.37), -- 01:50:53
    CFrame.new(-2295.66, 1021.07, -1805.11), -- 01:50:54
    CFrame.new(-2300.96, 1024.78, -1808.90), -- 01:50:54
    CFrame.new(-2306.23, 1028.56, -1812.91), -- 01:50:55
    CFrame.new(-2310.78, 1031.85, -1816.55), -- 01:50:55
    CFrame.new(-2316.25, 1035.72, -1820.93), -- 01:50:56
    CFrame.new(-2321.59, 1039.48, -1825.20), -- 01:50:56
    CFrame.new(-2326.98, 1043.26, -1829.53), -- 01:50:57
    CFrame.new(-2331.91, 1046.57, -1834.06), -- 01:50:57
    CFrame.new(-2336.96, 1049.77, -1838.91), -- 01:50:58
    CFrame.new(-2342.16, 1052.80, -1843.82), -- 01:50:58
    CFrame.new(-2347.47, 1055.64, -1848.29), -- 01:50:59
    CFrame.new(-2352.92, 1058.55, -1852.76), -- 01:50:59
    CFrame.new(-2358.27, 1061.71, -1857.14), -- 01:51:00
    CFrame.new(-2362.56, 1064.56, -1860.65), -- 01:51:01
    CFrame.new(-2368.18, 1068.57, -1865.02), -- 01:51:01
    CFrame.new(-2373.68, 1072.46, -1868.71), -- 01:51:02
    CFrame.new(-2379.67, 1076.58, -1872.19), -- 01:51:02
    CFrame.new(-2385.35, 1080.45, -1875.18), -- 01:51:03
    CFrame.new(-2391.48, 1084.61, -1877.83), -- 01:51:03
    CFrame.new(-2397.27, 1088.75, -1880.86), -- 01:51:04
    CFrame.new(-2403.15, 1092.66, -1883.55), -- 01:51:04
    CFrame.new(-2409.22, 1096.35, -1886.80), -- 01:51:05
    CFrame.new(-2413.72, 1099.90, -1891.60), -- 01:51:05
    CFrame.new(-2417.13, 1103.21, -1897.75), -- 01:51:06
    CFrame.new(-2420.12, 1106.15, -1903.97), -- 01:51:06
    CFrame.new(-2423.65, 1110.19, -1909.80), -- 01:51:07
    CFrame.new(-2426.61, 1114.41, -1915.18), -- 01:51:07
    CFrame.new(-2430.47, 1119.13, -1919.94), -- 01:51:08
    CFrame.new(-2434.38, 1124.13, -1924.36), -- 01:51:08
    CFrame.new(-2437.80, 1128.28, -1928.62), -- 01:51:09
    CFrame.new(-2441.99, 1132.10, -1934.13), -- 01:51:09
    CFrame.new(-2445.80, 1135.66, -1939.69), -- 01:51:10
    CFrame.new(-2449.58, 1139.20, -1945.29), -- 01:51:10
    CFrame.new(-2453.69, 1142.47, -1950.96), -- 01:51:11
    CFrame.new(-2458.34, 1144.97, -1956.67), -- 01:51:11
    CFrame.new(-2462.93, 1147.07, -1962.16), -- 01:51:12
    CFrame.new(-2467.78, 1148.85, -1967.97), -- 01:51:12
    CFrame.new(-2472.69, 1150.14, -1973.86), -- 01:51:13
    CFrame.new(-2477.36, 1152.69, -1979.18), -- 01:51:13
    CFrame.new(-2480.63, 1157.62, -1983.08), -- 01:51:14
    CFrame.new(-2481.80, 1162.81, -1985.49), -- 01:51:14
    CFrame.new(-2484.41, 1166.61, -1988.42), -- 01:51:15
    CFrame.new(-2488.40, 1171.82, -1992.32), -- 01:51:15
    CFrame.new(-2492.91, 1176.01, -1996.96), -- 01:51:16
    CFrame.new(-2497.15, 1180.21, -2001.45), -- 01:51:16
    CFrame.new(-2501.30, 1183.51, -2006.14), -- 01:51:17
    CFrame.new(-2505.10, 1186.00, -2010.24), -- 01:51:17
    CFrame.new(-2510.35, 1189.68, -2014.38), -- 01:51:18
    CFrame.new(-2515.81, 1192.92, -2018.54), -- 01:51:18
    CFrame.new(-2521.64, 1195.54, -2022.89), -- 01:51:19
    CFrame.new(-2527.82, 1197.97, -2026.61), -- 01:51:19
    CFrame.new(-2534.51, 1200.43, -2029.45), -- 01:51:20
    CFrame.new(-2541.30, 1202.91, -2032.04), -- 01:51:21
    CFrame.new(-2548.16, 1205.34, -2033.81), -- 01:51:21
    CFrame.new(-2555.35, 1207.88, -2035.19), -- 01:51:22
    CFrame.new(-2562.26, 1210.30, -2036.09), -- 01:51:22
    CFrame.new(-2568.65, 1212.42, -2036.75), -- 01:51:23
    CFrame.new(-2576.18, 1214.73, -2037.03), -- 01:51:23
    CFrame.new(-2583.59, 1217.00, -2036.91), -- 01:51:24
    CFrame.new(-2591.00, 1219.29, -2036.01), -- 01:51:24
    CFrame.new(-2598.13, 1221.49, -2034.79), -- 01:51:25
    CFrame.new(-2605.20, 1223.66, -2033.57), -- 01:51:25
    CFrame.new(-2612.53, 1225.90, -2032.44), -- 01:51:26
    CFrame.new(-2619.68, 1228.00, -2031.51), -- 01:51:26
    CFrame.new(-2627.53, 1229.78, -2030.60), -- 01:51:27
    CFrame.new(-2632.66, 1230.52, -2030.11), -- 01:51:27
    CFrame.new(-2640.45, 1232.04, -2029.59), -- 01:51:28
    CFrame.new(-2647.99, 1233.84, -2029.17), -- 01:51:28
    CFrame.new(-2655.44, 1235.69, -2029.28), -- 01:51:29
    CFrame.new(-2662.72, 1237.65, -2029.60), -- 01:51:29
    CFrame.new(-2670.02, 1239.63, -2029.79), -- 01:51:30
    CFrame.new(-2677.41, 1241.35, -2029.97), -- 01:51:30
    CFrame.new(-2684.84, 1243.05, -2030.17), -- 01:51:31
    CFrame.new(-2692.13, 1244.72, -2030.45), -- 01:51:31
    CFrame.new(-2699.48, 1246.05, -2030.74), -- 01:51:32
    CFrame.new(-2707.09, 1246.26, -2031.06), -- 01:51:32
    CFrame.new(-2714.64, 1246.32, -2031.43), -- 01:51:33
    CFrame.new(-2722.30, 1246.41, -2031.92), -- 01:51:33
    CFrame.new(-2729.92, 1246.37, -2032.42), -- 01:51:34
    CFrame.new(-2737.49, 1246.62, -2033.34), -- 01:51:34
    CFrame.new(-2744.72, 1247.84, -2034.73), -- 01:51:35
    CFrame.new(-2751.78, 1249.74, -2036.64), -- 01:51:35
    CFrame.new(-2758.58, 1251.63, -2038.51), -- 01:51:36
    CFrame.new(-2764.07, 1252.87, -2039.87), -- 01:51:36
    CFrame.new(-2771.51, 1253.53, -2041.59), -- 01:51:37
    CFrame.new(-2779.00, 1253.61, -2043.30), -- 01:51:37
    CFrame.new(-2786.40, 1252.41, -2044.91), -- 01:51:38
    CFrame.new(-2793.76, 1250.30, -2046.17), -- 01:51:38
    CFrame.new(-2800.58, 1247.27, -2047.23), -- 01:51:39
    CFrame.new(-2806.97, 1242.53, -2048.33), -- 01:51:39
    CFrame.new(-2812.74, 1237.68, -2049.44), -- 01:51:40
    CFrame.new(-2818.26, 1232.35, -2049.79), -- 01:51:40
    CFrame.new(-2823.39, 1226.45, -2049.36), -- 01:51:41
    CFrame.new(-2827.57, 1220.80, -2047.11), -- 01:51:41
    CFrame.new(-2829.53, 1216.40, -2041.30), -- 01:51:42
    CFrame.new(-2826.77, 1214.08, -2034.64), -- 01:51:43
    CFrame.new(-2821.41, 1211.57, -2029.70), -- 01:51:43
    CFrame.new(-2815.52, 1209.05, -2025.23), -- 01:51:44
    CFrame.new(-2811.31, 1206.29, -2019.51), -- 01:51:44
    CFrame.new(-2808.74, 1203.53, -2012.82), -- 01:51:45
    CFrame.new(-2808.83, 1200.93, -2005.61), -- 01:51:45
    CFrame.new(-2809.89, 1198.56, -1998.45), -- 01:51:46
    CFrame.new(-2811.12, 1196.22, -1991.30), -- 01:51:46
    CFrame.new(-2812.93, 1194.01, -1984.34), -- 01:51:47
    CFrame.new(-2817.12, 1191.88, -1978.28), -- 01:51:47
    CFrame.new(-2822.75, 1190.15, -1973.74), -- 01:51:48
    CFrame.new(-2830.33, 1188.62, -1972.25), -- 01:51:48
    CFrame.new(-2837.63, 1186.15, -1973.27), -- 01:51:49
    CFrame.new(-2844.04, 1182.44, -1975.70), -- 01:51:49
    CFrame.new(-2849.85, 1178.69, -1979.20), -- 01:51:50
    CFrame.new(-2854.34, 1175.94, -1984.59), -- 01:51:50
    CFrame.new(-2857.45, 1174.33, -1991.24), -- 01:51:51
    CFrame.new(-2860.16, 1173.42, -1998.14), -- 01:51:51
    CFrame.new(-2862.95, 1173.13, -2005.32), -- 01:51:52
    CFrame.new(-2865.45, 1173.32, -2012.61), -- 01:51:52
    CFrame.new(-2867.82, 1173.98, -2019.74), -- 01:51:53
    CFrame.new(-2870.57, 1174.73, -2026.67), -- 01:51:53
    CFrame.new(-2873.59, 1175.93, -2033.67), -- 01:51:54
    CFrame.new(-2876.74, 1177.72, -2040.23), -- 01:51:54
    CFrame.new(-2879.20, 1181.33, -2046.31), -- 01:51:55
    CFrame.new(-2881.43, 1185.39, -2052.19), -- 01:51:55
    CFrame.new(-2882.89, 1188.66, -2055.85), -- 01:51:56
    CFrame.new(-2884.78, 1194.09, -2061.30), -- 01:51:56
    CFrame.new(-2887.24, 1199.42, -2066.36), -- 01:51:57
    CFrame.new(-2889.36, 1204.82, -2071.68), -- 01:51:57
    CFrame.new(-2891.65, 1210.00, -2076.69), -- 01:51:58
    CFrame.new(-2894.18, 1215.09, -2082.10), -- 01:51:58
    CFrame.new(-2897.03, 1219.72, -2087.46), -- 01:51:59
    CFrame.new(-2900.42, 1224.39, -2092.72), -- 01:51:59
    CFrame.new(-2903.65, 1229.13, -2098.06), -- 01:52:00
    CFrame.new(-2906.99, 1233.27, -2103.49), -- 01:52:00
    CFrame.new(-2910.48, 1237.16, -2108.97), -- 01:52:01
    CFrame.new(-2914.11, 1241.26, -2114.50), -- 01:52:02
    CFrame.new(-2917.09, 1244.79, -2118.98), -- 01:52:02
    CFrame.new(-2920.68, 1248.50, -2124.40), -- 01:52:03
    CFrame.new(-2924.46, 1252.12, -2130.12), -- 01:52:03
    CFrame.new(-2927.89, 1255.99, -2135.67), -- 01:52:04
    CFrame.new(-2930.40, 1260.40, -2141.39), -- 01:52:04
    CFrame.new(-2931.91, 1265.37, -2146.98), -- 01:52:05
    CFrame.new(-2933.24, 1270.56, -2152.41), -- 01:52:05
    CFrame.new(-2934.70, 1275.92, -2157.50), -- 01:52:06
    CFrame.new(-2936.13, 1281.37, -2162.53), -- 01:52:06
    CFrame.new(-2937.54, 1287.05, -2167.67), -- 01:52:07
    CFrame.new(-2938.55, 1293.18, -2172.18), -- 01:52:07
    CFrame.new(-2940.19, 1299.63, -2176.26), -- 01:52:08
    CFrame.new(-2942.45, 1305.72, -2179.55), -- 01:52:08
    CFrame.new(-2945.19, 1312.74, -2183.24), -- 01:52:09
    CFrame.new(-2948.75, 1319.07, -2185.05), -- 01:52:09
    CFrame.new(-2952.77, 1325.58, -2184.72), -- 01:52:10
    CFrame.new(-2956.56, 1332.23, -2183.49), -- 01:52:10
    CFrame.new(-2960.09, 1338.46, -2180.95), -- 01:52:11
    CFrame.new(-2963.17, 1344.54, -2177.39), -- 01:52:11
    CFrame.new(-2964.88, 1350.47, -2172.99), -- 01:52:12
    CFrame.new(-2965.62, 1356.24, -2167.87), -- 01:52:12
    CFrame.new(-2965.14, 1361.85, -2162.76), -- 01:52:13
    CFrame.new(-2962.31, 1367.29, -2158.46), -- 01:52:13
    CFrame.new(-2958.34, 1372.49, -2154.53), -- 01:52:14
    CFrame.new(-2953.70, 1377.53, -2151.79), -- 01:52:14
    CFrame.new(-2947.90, 1382.59, -2152.25), -- 01:52:15
    CFrame.new(-2943.86, 1387.23, -2155.63), -- 01:52:15
    CFrame.new(-2941.82, 1392.16, -2161.17), -- 01:52:16
    CFrame.new(-2942.02, 1397.36, -2166.67), -- 01:52:16
    CFrame.new(-2944.37, 1403.52, -2170.56), -- 01:52:17
    CFrame.new(-2945.80, 1409.91, -2174.43), -- 01:52:17
    CFrame.new(-2944.77, 1416.48, -2178.37), -- 01:52:18
    CFrame.new(-2942.01, 1422.52, -2182.18), -- 01:52:18
    CFrame.new(-2938.50, 1428.38, -2186.34), -- 01:52:19
    CFrame.new(-2934.60, 1433.12, -2191.10), -- 01:52:19
    CFrame.new(-2930.95, 1434.76, -2197.84), -- 01:52:20
    CFrame.new(-2927.45, 1434.56, -2204.67), -- 01:52:20
    CFrame.new(-2923.40, 1434.27, -2211.38), -- 01:52:21
    CFrame.new(-2920.02, 1435.81, -2217.96), -- 01:52:22
    CFrame.new(-2917.25, 1438.34, -2224.54), -- 01:52:22
    CFrame.new(-2913.73, 1440.56, -2230.76), -- 01:52:23
    CFrame.new(-2912.94, 1443.52, -2237.81), -- 01:52:23
    CFrame.new(-2916.88, 1447.97, -2242.44), -- 01:52:24
    CFrame.new(-2920.97, 1452.34, -2242.30), -- 01:52:24
    CFrame.new(-2924.90, 1457.14, -2237.84), -- 01:52:25
    CFrame.new(-2929.93, 1462.97, -2235.68), -- 01:52:25
    CFrame.new(-2935.07, 1468.68, -2234.81), -- 01:52:26
    CFrame.new(-2940.42, 1474.35, -2235.51), -- 01:52:26
    CFrame.new(-2946.28, 1479.07, -2236.43), -- 01:52:27
    CFrame.new(-2952.32, 1483.29, -2238.03), -- 01:52:27
    CFrame.new(-2958.49, 1486.97, -2241.11), -- 01:52:28
    CFrame.new(-2964.48, 1489.93, -2244.74), -- 01:52:28
    CFrame.new(-2968.89, 1493.68, -2249.52), -- 01:52:29
    CFrame.new(-2973.15, 1497.54, -2254.45), -- 01:52:29
    CFrame.new(-2975.70, 1501.20, -2260.45), -- 01:52:30
    CFrame.new(-2976.91, 1504.93, -2267.20), -- 01:52:30
    CFrame.new(-2977.13, 1508.23, -2274.05), -- 01:52:31
    CFrame.new(-2976.90, 1510.81, -2281.34), -- 01:52:31
    CFrame.new(-2975.66, 1512.39, -2288.80), -- 01:52:32
    CFrame.new(-2974.49, 1513.90, -2296.31), -- 01:52:32
    CFrame.new(-2973.33, 1515.37, -2303.58), -- 01:52:33
    CFrame.new(-2971.95, 1516.83, -2310.74), -- 01:52:33
    CFrame.new(-2970.43, 1518.37, -2318.24), -- 01:52:34
    CFrame.new(-2969.01, 1519.89, -2325.66), -- 01:52:34
    CFrame.new(-2967.62, 1521.31, -2332.91), -- 01:52:35
    CFrame.new(-2966.15, 1521.96, -2340.42), -- 01:52:35
    CFrame.new(-2964.56, 1522.46, -2347.70), -- 01:52:36
    CFrame.new(-2962.17, 1524.12, -2354.52), -- 01:52:36
    CFrame.new(-2959.34, 1527.69, -2360.60), -- 01:52:37
    CFrame.new(-2956.41, 1531.86, -2366.41), -- 01:52:37
    CFrame.new(-2953.90, 1536.13, -2371.93), -- 01:52:38
    CFrame.new(-2951.94, 1539.90, -2376.49), -- 01:52:38
    CFrame.new(-2949.73, 1545.01, -2381.72), -- 01:52:39
    CFrame.new(-2947.57, 1550.41, -2386.98), -- 01:52:39
    CFrame.new(-2945.54, 1554.17, -2393.61), -- 01:52:40
    CFrame.new(-2944.17, 1558.13, -2400.18), -- 01:52:40
    CFrame.new(-2944.47, 1562.57, -2406.47), -- 01:52:41
    CFrame.new(-2946.42, 1567.78, -2411.71), -- 01:52:41
    CFrame.new(-2949.05, 1573.18, -2416.67), -- 01:52:42
    CFrame.new(-2950.90, 1578.60, -2421.68), -- 01:52:42
    CFrame.new(-2951.77, 1584.12, -2426.95), -- 01:52:43
    CFrame.new(-2951.94, 1589.52, -2432.28), -- 01:52:44
    CFrame.new(-2951.73, 1594.66, -2438.12), -- 01:52:44
    CFrame.new(-2951.07, 1599.13, -2444.23), -- 01:52:45
    CFrame.new(-2949.84, 1603.14, -2450.65), -- 01:52:45
    CFrame.new(-2948.54, 1606.49, -2457.49), -- 01:52:46
    CFrame.new(-2948.05, 1609.14, -2464.87), -- 01:52:46
    CFrame.new(-2947.93, 1611.28, -2472.26), -- 01:52:47
    CFrame.new(-2947.91, 1613.41, -2479.65), -- 01:52:47
    CFrame.new(-2947.94, 1615.07, -2487.26), -- 01:52:48
    CFrame.new(-2948.10, 1616.20, -2494.75), -- 01:52:48
    CFrame.new(-2950.62, 1616.63, -2502.34), -- 01:52:49
    CFrame.new(-2953.38, 1616.85, -2508.84), -- 01:52:49
    CFrame.new(-2957.67, 1617.02, -2515.04), -- 01:52:50
    CFrame.new(-2963.76, 1617.04, -2519.90), -- 01:52:50
    CFrame.new(-2970.92, 1616.89, -2522.49), -- 01:52:51
    CFrame.new(-2978.19, 1616.73, -2524.32), -- 01:52:51
    CFrame.new(-2985.60, 1617.21, -2525.89), -- 01:52:52
    CFrame.new(-2992.96, 1618.30, -2527.22), -- 01:52:52
    CFrame.new(-3000.53, 1619.33, -2528.59), -- 01:52:53
    CFrame.new(-3007.85, 1620.19, -2529.90), -- 01:52:53
    CFrame.new(-3013.89, 1620.66, -2531.01), -- 01:52:54
    CFrame.new(-3021.92, 1620.47, -2532.47), -- 01:52:54
    CFrame.new(-3029.49, 1620.18, -2533.86), -- 01:52:55
    CFrame.new(-3036.99, 1619.72, -2535.23), -- 01:52:55
    CFrame.new(-3044.59, 1619.16, -2536.63), -- 01:52:56
    CFrame.new(-3052.00, 1618.61, -2537.98), -- 01:52:56
    CFrame.new(-3059.41, 1618.11, -2539.34), -- 01:52:57
    CFrame.new(-3066.81, 1617.75, -2540.77), -- 01:52:57
    CFrame.new(-3074.14, 1618.10, -2542.72), -- 01:52:58
    CFrame.new(-3080.78, 1620.18, -2545.24), -- 01:52:58
    CFrame.new(-3086.15, 1624.54, -2548.28), -- 01:52:59
    CFrame.new(-3088.91, 1631.28, -2550.94), -- 01:52:59
    CFrame.new(-3090.81, 1638.21, -2553.06), -- 01:53:00
    CFrame.new(-3091.20, 1645.27, -2555.49), -- 01:53:00
    CFrame.new(-3091.23, 1652.46, -2557.95), -- 01:53:01
    CFrame.new(-3091.79, 1659.83, -2559.61), -- 01:53:01
    CFrame.new(-3091.66, 1667.41, -2561.38), -- 01:53:02
    CFrame.new(-3089.97, 1674.67, -2563.45), -- 01:53:02
    CFrame.new(-3091.07, 1682.14, -2565.33), -- 01:53:03
    CFrame.new(-3092.81, 1689.23, -2567.70), -- 01:53:03
    CFrame.new(-3095.95, 1695.97, -2569.04), -- 01:53:04
    CFrame.new(-3099.77, 1702.44, -2570.08), -- 01:53:05
    CFrame.new(-3104.93, 1708.20, -2570.86), -- 01:53:05
    CFrame.new(-3109.96, 1713.67, -2573.06), -- 01:53:06
    CFrame.new(-3113.65, 1719.03, -2576.70), -- 01:53:06
    CFrame.new(-3116.20, 1723.63, -2582.47), -- 01:53:07
    CFrame.new(-3118.01, 1727.66, -2588.72), -- 01:53:07
    CFrame.new(-3118.73, 1731.05, -2595.32), -- 01:53:08
    CFrame.new(-3120.70, 1734.22, -2602.27), -- 01:53:08
    CFrame.new(-3123.99, 1736.64, -2608.59), -- 01:53:09
    CFrame.new(-3128.49, 1738.55, -2614.70), -- 01:53:09
    CFrame.new(-3134.53, 1739.80, -2619.52), -- 01:53:10
    CFrame.new(-3141.19, 1739.66, -2620.71), -- 01:53:10
    CFrame.new(-3148.50, 1739.13, -2621.07), -- 01:53:11
    CFrame.new(-3156.10, 1738.16, -2620.65), -- 01:53:11
    CFrame.new(-3163.56, 1737.18, -2619.86), -- 01:53:12
    CFrame.new(-3170.94, 1736.08, -2619.06), -- 01:53:12
    CFrame.new(-3178.52, 1734.42, -2618.13), -- 01:53:13
    CFrame.new(-3185.62, 1731.72, -2618.01), -- 01:53:13
    CFrame.new(-3192.78, 1728.54, -2618.07), -- 01:53:14
    CFrame.new(-3199.70, 1725.29, -2618.12), -- 01:53:14
    CFrame.new(-3206.03, 1722.60, -2615.92), -- 01:53:15
    CFrame.new(-3211.96, 1720.94, -2610.97), -- 01:53:15
    CFrame.new(-3217.67, 1719.39, -2606.17), -- 01:53:16
    CFrame.new(-3223.46, 1717.86, -2601.56), -- 01:53:16
    CFrame.new(-3228.82, 1716.66, -2596.30), -- 01:53:17
    CFrame.new(-3232.57, 1715.90, -2589.58), -- 01:53:17
    CFrame.new(-3234.99, 1715.45, -2584.39), -- 01:53:18
}
-- Checkpoints Gunung Daun (sesuaikan dengan pos aslinya)
local checkpoints = {
    Vector3.new(-625.014038, 250.367432, -383.940338),   -- CP1
    Vector3.new(-1201.94055, 261.679169, -487.414337),   -- CP2
    Vector3.new(-1399.73083, 578.413635, -953.336426),   -- CP3
    Vector3.new(-1701.85278, 816.575745, -1401.61108),   -- CP4
    Vector3.new(-3231.60278, 1715.8175 + 150, -2591.06348), -- CP5 (fly dulu 150 atas)
}

-- == Helper Functions ==
local function teleportCharacter(character, position)
    if character and character:FindFirstChild("HumanoidRootPart") then
        if typeof(character.SetPrimaryPartCFrame) == "function" then
            character:SetPrimaryPartCFrame(CFrame.new(position))
        else
            character.HumanoidRootPart.CFrame = CFrame.new(position)
        end
        -- Stop velocity
        local hrp = character:FindFirstChild("HumanoidRootPart")
        if hrp then
            hrp.AssemblyLinearVelocity = Vector3.zero
            hrp.RotVelocity = Vector3.zero
        end
    end
end

-- Get carried player character if near
local function getCarriedCharacter()
    local hrp = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
    if not hrp then return nil end
    for _, plr in pairs(Players:GetPlayers()) do
        if plr ~= player and plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
            local dist = (plr.Character.HumanoidRootPart.Position - hrp.Position).Magnitude
            if dist < 8 then
                return plr.Character
            end
        end
    end
    return nil
end

local function debugCharacterState()
    if player.Character then
        local hrp = player.Character:FindFirstChild("HumanoidRootPart")
        local humanoid = player.Character:FindFirstChildOfClass("Humanoid")
        
        print("=== CHARACTER DEBUG ===")
        print("Character exists:", player.Character ~= nil)
        print("HRP exists:", hrp ~= nil)
        print("Humanoid exists:", humanoid ~= nil)
        if hrp then
            print("HRP Position:", hrp.Position)
            print("HRP CFrame:", hrp.CFrame)
        end
        if humanoid then
            print("Humanoid State:", humanoid:GetState())
            print("Humanoid Health:", humanoid.Health)
        end
        print("======================")
    end
end

local function WaitHRP(plr)
    local hrp = plr.Character and plr.Character:FindFirstChild("HumanoidRootPart")
    while not hrp do
        task.wait(0)
        hrp = plr.Character and plr.Character:FindFirstChild("HumanoidRootPart")
    end
    return hrp
end

-- Global variables
local isTeleporting = false

-- Improved topos function with proper parameter handling
local function topos(plr, targetCFrame)
    if not plr then
        plr = game.Players.LocalPlayer
    end
    
    if not (plr.Character and plr.Character:FindFirstChild("HumanoidRootPart")) then
        print("topos ERROR: Character not ready")
        return
    end
    
    local Distance = (targetCFrame.Position - plr.Character.HumanoidRootPart.Position).Magnitude
    
    if not targetCFrame then
        print("topos ERROR: No target CFrame")
        return
    end
    
    -- Clean up existing PartTele
    if plr.Character:FindFirstChild("PartTele") then
        plr.Character.PartTele:Destroy()
        task.wait(0.05) -- Small wait for cleanup
    end
    
    local PartTele = Instance.new("Part", plr.Character)
    PartTele.Size = Vector3.new(10, 1, 10)
    PartTele.Name = "PartTele"
    PartTele.Anchored = true -- SUDAH DIPERBAIKI
    PartTele.Transparency = 1
    PartTele.CanCollide = false
    PartTele.CFrame = WaitHRP(plr).CFrame 
    
    isTeleporting = true
    
    -- PERBAIKAN: Better speed calculation
    local tweenSpeed = math.max(Distance / (state.TweenSpeed * 100), 0.1)
    
    -- PERBAIKAN: Reduce Y offset untuk avoid getting stuck
    local targetPos = targetCFrame + Vector3.new(0, 1.5, 0) -- Reduced from 2 to 1.5
    
    print("topos: Distance =", Distance, "TweenSpeed =", tweenSpeed, "Target =", targetPos.Position)
    
    local Tween = game:GetService("TweenService"):Create(
        PartTele, 
        TweenInfo.new(tweenSpeed, Enum.EasingStyle.Linear), 
        {CFrame = targetPos}
    )
    
    -- Connection to move player
    local connection
    connection = RunService.Heartbeat:Connect(function()
        if not isTeleporting or not PartTele or not PartTele.Parent then
            if connection then connection:Disconnect() end
            return
        end
        if plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
            WaitHRP(plr).CFrame = PartTele.CFrame
        end
    end)
    
    Tween:Play()
    
    -- Wait for completion with timeout
    local startTime = tick()
    local maxWaitTime = tweenSpeed + 3 -- 3 second buffer
    
    local completed = false
    Tween.Completed:Connect(function()
        completed = true
        if connection then connection:Disconnect() end
        if PartTele then PartTele:Destroy() end
        isTeleporting = false
        print("topos completed successfully")
    end)
    
    -- Wait loop with timeout
    while not completed and (tick() - startTime) < maxWaitTime do
        task.wait(0.05)
    end
    
    -- Force cleanup if timeout
    if not completed then
        print("topos TIMEOUT - force cleanup")
        Tween:Cancel()
        if connection then connection:Disconnect() end
        if PartTele then PartTele:Destroy() end
        isTeleporting = false
    end
end

-- == Fixed Player Finding Function ==
local function findPlayerByName(searchName)
    if not searchName or searchName == "" then return nil end
    local lowerSearch = searchName:lower()
    
    -- First try exact username match
    for _, plr in ipairs(Players:GetPlayers()) do
        if plr.Name:lower() == lowerSearch then
            return plr
        end
    end
    
    -- Then try display name match
    for _, plr in ipairs(Players:GetPlayers()) do
        if plr.DisplayName:lower() == lowerSearch then
            return plr
        end
    end
    
    -- Finally try partial matches
    for _, plr in ipairs(Players:GetPlayers()) do
        if plr.Name:lower():find(lowerSearch) or plr.DisplayName:lower():find(lowerSearch) then
            return plr
        end
    end
    
    return nil
end

-- Noclip control dengan perbaikan (NO DAMAGE + NO FALL THROUGH GROUND)
local noclipConnection = nil
local noclipEnabled = false
local originalHealth = nil

local function enableNoclip()
    if noclipConnection then return end
    noclipEnabled = true
    
    -- Store original health dan set ke max
    if player.Character and player.Character:FindFirstChildOfClass("Humanoid") then
        local humanoid = player.Character:FindFirstChildOfClass("Humanoid")
        originalHealth = humanoid.Health
        humanoid.Health = humanoid.MaxHealth
    end
    
    noclipConnection = RunService.Stepped:Connect(function()
        if noclipEnabled and player.Character and player.Character:FindFirstChildOfClass("Humanoid") then
            local humanoid = player.Character:FindFirstChildOfClass("Humanoid")
            local rootPart = player.Character:FindFirstChild("HumanoidRootPart")
            
            -- PERBAIKAN: Gunakan Flying state instead of Physics untuk avoid tembus tanah
            if humanoid:GetState() ~= Enum.HumanoidStateType.Flying then
                humanoid:ChangeState(Enum.HumanoidStateType.Flying)
            end
            
            -- Disable collision untuk semua parts
            for _, part in pairs(player.Character:GetDescendants()) do
                if part:IsA("BasePart") and part.Parent == player.Character then
                    part.CanCollide = false
                end
            end
            
            -- ANTI FALL THROUGH: Set minimum Y position jika terlalu rendah
            if rootPart and rootPart.Position.Y < -1000 then
                -- Emergency teleport ke spawn atau posisi aman
                rootPart.CFrame = CFrame.new(rootPart.Position.X, 50, rootPart.Position.Z)
                print("Emergency: Prevented fall through world!")
            end
            
            -- Prevent damage dengan maintain full health
            if humanoid.Health < humanoid.MaxHealth then
                humanoid.Health = humanoid.MaxHealth
            end
            
            -- PERBAIKAN: Set BodyVelocity ke zero untuk prevent uncontrolled falling
            if rootPart and rootPart.AssemblyLinearVelocity.Y < -50 then
                local bodyVelocity = rootPart:FindFirstChild("AntiGravity") or Instance.new("BodyVelocity")
                bodyVelocity.Name = "AntiGravity"
                bodyVelocity.MaxForce = Vector3.new(0, math.huge, 0)
                bodyVelocity.Velocity = Vector3.new(0, 0, 0)
                bodyVelocity.Parent = rootPart
            end
        end
    end)
end

local function disableNoclip()
    noclipEnabled = false
    if noclipConnection then
        noclipConnection:Disconnect()
        noclipConnection = nil
    end
    
    -- Restore collision dan normal state
    if player.Character and player.Character:FindFirstChildOfClass("Humanoid") then
        local humanoid = player.Character:FindFirstChildOfClass("Humanoid")
        local rootPart = player.Character:FindFirstChild("HumanoidRootPart")
        
        -- Remove anti-gravity body velocity
        if rootPart and rootPart:FindFirstChild("AntiGravity") then
            rootPart.AntiGravity:Destroy()
        end
        
        -- Restore normal humanoid state
        humanoid:ChangeState(Enum.HumanoidStateType.Running)
        
        -- Restore collision for parts (except HumanoidRootPart)
        for _, part in pairs(player.Character:GetDescendants()) do
            if part:IsA("BasePart") and part.Parent == player.Character then
                if part.Name ~= "HumanoidRootPart" then
                    part.CanCollide = true
                end
            end
        end
        
        -- Restore original health jika ada
        if originalHealth and originalHealth > 0 then
            humanoid.Health = originalHealth
        end
    end
end

-- Fungsi untuk temporary disable noclip (untuk jump) - IMPROVED
local function temporaryDisableNoclip(duration)
    local wasEnabled = noclipEnabled
    if not wasEnabled then return end
    
    noclipEnabled = false
    
    -- Set ke running state untuk jump
    if player.Character and player.Character:FindFirstChildOfClass("Humanoid") then
        local humanoid = player.Character:FindFirstChildOfClass("Humanoid")
        local rootPart = player.Character:FindFirstChild("HumanoidRootPart")
        
        -- Remove anti-gravity temporarily
        if rootPart and rootPart:FindFirstChild("AntiGravity") then
            rootPart.AntiGravity:Destroy()
        end
        
        humanoid:ChangeState(Enum.HumanoidStateType.Running)
        
        -- Ensure no damage during temporary disable
        local tempHealth = humanoid.Health
        local tempConnection
        tempConnection = RunService.Stepped:Connect(function()
            if humanoid.Health < tempHealth then
                humanoid.Health = tempHealth
            end
            -- Prevent falling through ground even during temp disable
            if rootPart and rootPart.Position.Y < -1000 then
                rootPart.CFrame = CFrame.new(rootPart.Position.X, 50, rootPart.Position.Z)
            end
        end)
        
        task.wait(duration or 0.1)
        
        if tempConnection then
            tempConnection:Disconnect()
        end
    else
        task.wait(duration or 0.1)
    end
    
    noclipEnabled = wasEnabled
end

-- Fungsi untuk melakukan lompatan otomatis (DIPERBAIKI)
local function autoJump(times)
    if not (player and player.Character and player.Character:FindFirstChild("Humanoid")) then 
        return 
    end
    
    local humanoid = player.Character:FindFirstChild("Humanoid")
    
    for i = 1, times do
        if not running then return end
        
        -- Temporary disable noclip untuk memungkinkan jump
        temporaryDisableNoclip(0.1)
        
        -- Set ke Running state dulu, lalu jump
        humanoid:ChangeState(Enum.HumanoidStateType.Running)
        task.wait(0.1)
        
        humanoid.Jump = true
        print("Jump", i, "executed")
        
        task.wait(0.4) -- Delay antar lompatan
    end
end

-- Fungsi reset karakter yang lebih reliable
local function resetCharacter()
    print("Attempting character reset...")
    
    -- Disable noclip sebelum reset
    disableNoclip()
    task.wait(0.5)
    
    pcall(function()
        if player.Character and player.Character:FindFirstChildOfClass("Humanoid") then
            local humanoid = player.Character:FindFirstChildOfClass("Humanoid")
            
            -- Clear any existing PartTele before reset
            if player.Character:FindFirstChild("PartTele") then
                player.Character.PartTele:Destroy()
            end
            
            -- Restore normal state before killing
            humanoid:ChangeState(Enum.HumanoidStateType.Running)
            task.wait(0.2)
            
            -- Kill character
            humanoid.Health = 0
            print("Character reset signal sent")
        end
    end)
end

-- Fungsi untuk validasi checkpoint dengan delay yang PASTI VALID
local function validateCheckpoint(checkpointNumber, position)
    local delays = {
        [1] = 1,   -- CP1: 5 detik (aman)
        [2] = 2,  -- CP2: 12 detik (aman)
        [3] = 2,  -- CP3: 25 detik (sangat aman)
        [4] = 2   -- CP4: 35 detik (extra aman)
    }
    
    local waitTime = delays[checkpointNumber] or 15
    
    print(string.format("Validating CP%d with %d second delay...", checkpointNumber, waitTime))
    
    -- Multiple teleport attempts untuk memastikan posisi
    for attempt = 1, 3 do
        teleportCharacter(player.Character, position)
        task.wait(1)
        if attempt == 3 then break end
        print(string.format("CP%d teleport attempt %d", checkpointNumber, attempt))
    end
    
    -- Wait untuk positioning
    task.wait(3)
    
    -- Multiple jump attempts
    autoJump(5) -- 5 kali jump untuk trigger
    
    -- Main validation wait
    task.wait(waitTime)
    
    -- EXTRA validation untuk CP3 dan CP4
    if checkpointNumber >= 3 then
        print(string.format("EXTRA validation phase for CP%d...", checkpointNumber))
        
        -- Re-teleport dengan force
        for i = 1, 2 do
            teleportCharacter(player.Character, position)
            task.wait(2)
            autoJump(3)
            task.wait(5)
        end
        
        print(string.format("EXTRA validation completed for CP%d", checkpointNumber))
    end
    
    print(string.format("CP%d FULLY VALIDATED! (Total: ~%d seconds)", checkpointNumber, 
        checkpointNumber >= 3 and (waitTime + 20) or (waitTime + 8)))
end

local function runRouteOnce()
    print("Starting runRouteOnce...")
    
    if not running then 
        print("STOPPED: running = false")
        return 
    end
    
    if not (player and player.Character and player.Character:FindFirstChild("HumanoidRootPart")) then 
        print("ERROR: Player character not ready")
        return 
    end
    
    enableNoclip()
    
    -- CP1 - Validation delay: 3 detik
    if not running then return end
    print("Phase 1: Going to CP1")
    validateCheckpoint(1, checkpoints[1])
    
    -- ToCP2 ke CP2 - Validation delay: 8 detik
    if not running then return end
    print("Phase 2: ToCP2 route...")
    for i, cf in ipairs(toCP2) do
        if not running then return end
        topos(player, cf)
        if i % 10 == 0 then task.wait(0) end
    end
    validateCheckpoint(2, checkpoints[2])
    
    -- ToCP3 ke CP3 - Validation delay: 12 detik
    if not running then return end
    print("Phase 3: ToCP3 route...")
    for i, cf in ipairs(toCP3) do
        if not running then return end
        topos(player, cf)
        if i % 10 == 0 then task.wait(0) end
    end
    validateCheckpoint(3, checkpoints[3])
    
    -- ToCP4 ke CP4 - Validation delay: 20 detik + extra validation
    if not running then return end
    print("Phase 4: ToCP4 route...")
    for i, cf in ipairs(toCP4) do
        if not running then return end
        topos(player, cf)
        if i % 10 == 0 then task.wait(0) end
    end
    validateCheckpoint(4, checkpoints[4])
    
    -- ToFinish
    if not running then return end
    print("Phase 5: ToFinish route...")
    for i, cf in ipairs(toFinish) do
        if not running then return end
        topos(player, cf)
        if i % 15 == 0 then task.wait(0) end
    end

    -- PERBAIKAN: Tambah safety check sebelum reset
    print("Route completed successfully!")
    task.wait(2)
    
    if not running then 
        print("Stopped before reset")
        disableNoclip()
        return 
    end
    
    print("Resetting character for next loop...")
    resetCharacter()
    
    print("Character reset completed")
end

-- MASALAH: Setelah reset, character respawn tapi masih di middle of nowhere
-- Kemudian script langsung lanjut ke step berikutnya tanpa tunggu spawn

-- GANTI FUNGSI loopSummit INI:
local player = game:GetService("Players").LocalPlayer
local function teleportToCheckpoint(checkpointNumber)
    local checkpointName = tostring(checkpointNumber)
    local checkpoint = workspace.Checkpoints:FindFirstChild(checkpointName)
    
    if not checkpoint then
        return
    end
    local character = player.Character
    if not character then
        return
    end
    
    local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
    if not humanoidRootPart then
        return
    end
    humanoidRootPart.CFrame = checkpoint.CFrame
end
local function teleportToFinalPosition()
    local character = player.Character
    if not character then
        return
    end
    
    local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
    if not humanoidRootPart then
        return
    end
    local SubmitGate = CFrame.new(-1971.53149, 848.944641, -1671.80981, 0.724059224, 0, 0.689737856, 0, 1, 0, -0.689737856, 0, 0.724059224)
    humanoidRootPart.CFrame = SubmitGate
    task.wait(3)
    local finalPosition = CFrame.new(-3231.60278, 1715.8175 + 150, -2591.06348)
    humanoidRootPart.CFrame = finalPosition
    task.wait(3)

end
local function loopSummit()
    while running do
        player.Character:SetAttribute("TeleportBypass", true)
        task.wait(1)
        if not player then
            task.wait(3)
            continue
        end
        
        local leaderstats = player:FindFirstChild("leaderstats")
        if not leaderstats then
            task.wait(3)
            continue
        end
        
        local shelter = leaderstats:FindFirstChild("Shelter")
        if not shelter then
            task.wait(3)
            continue
        end
        
        local shelterValue = shelter.Value
        
        if shelterValue == 0 then
            teleportToCheckpoint(1)
        elseif shelterValue == 1 then
            teleportToCheckpoint(2)
        elseif shelterValue == 2 then
            teleportToCheckpoint(3)
        elseif shelterValue == 3 then
            teleportToCheckpoint(4)
        elseif shelterValue == 4 then
            teleportToFinalPosition()
        end
    end
end


-- == Infinity Jump ==
UserInputService.JumpRequest:Connect(function()
    if state.infJump and player.Character then
        local h = player.Character:FindFirstChildOfClass("Humanoid")
        if h then pcall(function() h:ChangeState(Enum.HumanoidStateType.Jumping) end) end
    end
end)

-- == ESP Player ==
local function createHighlightFor(plr)
    if not plr or plr == player then return end
    if espTable[plr] and espTable[plr].Highlight and espTable[plr].Highlight.Parent then return end
    local char = plr.Character
    if not char then return end
    local highlight = Instance.new("Highlight")
    highlight.Name = "NERO_ESP"
    highlight.Adornee = char
    highlight.FillTransparency = 0.6
    highlight.FillColor = Color3.fromRGB(255, 60, 60)
    highlight.OutlineColor = Color3.fromRGB(255,255,255)
    highlight.Parent = char
    espTable[plr] = {Highlight = highlight}
end

local function removeHighlightFor(plr)
    if espTable[plr] and espTable[plr].Highlight then
        pcall(function() espTable[plr].Highlight:Destroy() end)
    end
    espTable[plr] = nil
end

local function setESP(enabled)
    state.espEnabled = enabled
    if enabled then
        for _, plr in ipairs(Players:GetPlayers()) do
            if plr ~= player then
                createHighlightFor(plr)
            end
        end
    else
        for k, _ in pairs(espTable) do removeHighlightFor(k) end
    end
end

Players.PlayerAdded:Connect(function(plr)
    plr.CharacterAdded:Connect(function()
        task.wait(0.8)
        if state.espEnabled then createHighlightFor(plr) end
    end)
end)
Players.PlayerRemoving:Connect(function(plr) removeHighlightFor(plr) end)

-- == Noclip for body parts ==
RunService.Stepped:Connect(function()
    if state.noclipEnabled and player and player.Character then
        for _, p in ipairs(player.Character:GetDescendants()) do
            if p:IsA("BasePart") then
                p.CanCollide = false
            end
        end
    end
end)

-- === Mobile Fly Buttons ===
local function removeFlyButtons()
    if flyGui then pcall(function() flyGui:Destroy() end) end
    flyGui, ascendBtn, descendBtn = nil, nil, nil
end

local function createFlyButtons()
    removeFlyButtons()
    flyGui = Instance.new("ScreenGui")
    flyGui.Name = "NERO_FlyGui"
    flyGui.ResetOnSpawn = false
    flyGui.Parent = playerGui

    ascendBtn = Instance.new("TextButton")
    ascendBtn.Name = "AscendBtn"
    ascendBtn.Size = UDim2.new(0, 60, 0, 60)
    ascendBtn.Position = UDim2.new(1, -170, 1, -200)
    ascendBtn.AnchorPoint = Vector2.new(1, 1)
    ascendBtn.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
    ascendBtn.BackgroundTransparency = 0.1
    ascendBtn.Text = "‚ñ≤"
    ascendBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
    ascendBtn.TextScaled = true
    ascendBtn.Font = Enum.Font.SourceSansBold
    ascendBtn.Parent = flyGui
    
    local ascendCorner = Instance.new("UICorner")
    ascendCorner.CornerRadius = UDim.new(0, 10)
    ascendCorner.Parent = ascendBtn
    
    ascendBtn.InputBegan:Connect(function(inp)
        if inp.UserInputType == Enum.UserInputType.Touch or inp.UserInputType == Enum.UserInputType.MouseButton1 then
            state.verticalFly = 1
        end
    end)
    
    ascendBtn.InputEnded:Connect(function(inp)
        if inp.UserInputType == Enum.UserInputType.Touch or inp.UserInputType == Enum.UserInputType.MouseButton1 then
            state.verticalFly = 0
        end
    end)

    descendBtn = Instance.new("TextButton")
    descendBtn.Name = "DescendBtn"
    descendBtn.Size = UDim2.new(0, 60, 0, 60)
    descendBtn.Position = UDim2.new(1, -170, 1, -130)
    descendBtn.AnchorPoint = Vector2.new(1, 1)
    descendBtn.BackgroundColor3 = Color3.fromRGB(255, 85, 85)
    descendBtn.BackgroundTransparency = 0.1
    descendBtn.Text = "‚ñº"
    descendBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
    descendBtn.TextScaled = true
    descendBtn.Font = Enum.Font.SourceSansBold
    descendBtn.Parent = flyGui
    
    local descendCorner = Instance.new("UICorner")
    descendCorner.CornerRadius = UDim.new(0, 10)
    descendCorner.Parent = descendBtn
    
    descendBtn.InputBegan:Connect(function(inp)
        if inp.UserInputType == Enum.UserInputType.Touch or inp.UserInputType == Enum.UserInputType.MouseButton1 then
            state.verticalFly = -1
        end
    end)
    
    descendBtn.InputEnded:Connect(function(inp)
        if inp.UserInputType == Enum.UserInputType.Touch or inp.UserInputType == Enum.UserInputType.MouseButton1 then
            state.verticalFly = 0
        end
    end)
end

-- === Anti-Reset Speed Hack ===
RunService.RenderStepped:Connect(function()
    if player.Character and player.Character:FindFirstChildOfClass("Humanoid") then
        local h = player.Character:FindFirstChildOfClass("Humanoid")
        local hrp = player.Character:FindFirstChild("HumanoidRootPart")
        
        if h and state.speedHackEnabled then
            pcall(function() h.WalkSpeed = state.speedHackValue end)
            -- Backup with velocity if WalkSpeed gets reset
            if hrp and h.WalkSpeed ~= state.speedHackValue then
                local moveDir = Vector3.zero
                if h.MoveDirection and h.MoveDirection.Magnitude > 0 then
                    moveDir = h.MoveDirection.Unit
                else
                    moveDir = hrp.CFrame.LookVector
                end
                if moveDir.Magnitude > 0 then
                    hrp.AssemblyLinearVelocity = Vector3.new(moveDir.X * state.speedHackValue, hrp.AssemblyLinearVelocity.Y, moveDir.Z * state.speedHackValue)
                end
            end
        elseif h and not state.speedHackEnabled then
            pcall(function() h.WalkSpeed = state.normalWalkSpeed end)
        end
    end
end)

-- === InfinityYield-style Fly Module ===
local FlyModule = (function()
    local IYMouse = player:GetMouse()

    local function getRoot(char)
        if not char then return nil end
        return char:FindFirstChild('HumanoidRootPart') or char:FindFirstChild('Torso') or char:FindFirstChild('UpperTorso')
    end

    local FLYING = false
    local QEfly = true
    local iyflyspeed = 1
    local vehicleflyspeed = 1
    local flyKeyDown, flyKeyUp
    local mfly1, mfly2

    local function sFLY(vfly)
        repeat task.wait() until player and player.Character and player.Character:FindFirstChildOfClass("Humanoid")
        repeat task.wait() until IYMouse

        if flyKeyDown or flyKeyUp then
            pcall(function()
                if flyKeyDown then flyKeyDown:Disconnect() end
                if flyKeyUp then flyKeyUp:Disconnect() end
            end)
        end

        local T = getRoot(player.Character)
        if not T then return end
        local CONTROL = {F = 0, B = 0, L = 0, R = 0, Q = 0, E = 0}
        local lCONTROL = {F = 0, B = 0, L = 0, R = 0, Q = 0, E = 0}
        local SPEED = 0

        local function FLY()
            FLYING = true
            local BG = Instance.new('BodyGyro')
            local BV = Instance.new('BodyVelocity')
            BG.P = 9e4
            BG.Parent = T
            BV.Parent = T
            BG.MaxTorque = Vector3.new(9e9, 9e9, 9e9)
            BG.CFrame = T.CFrame
            BV.Velocity = Vector3.new(0, 0, 0)
            BV.MaxForce = Vector3.new(9e9, 9e9, 9e9)
            task.spawn(function()
                repeat task.wait()
                    if not vfly and player.Character:FindFirstChildOfClass('Humanoid') then
                        pcall(function() player.Character:FindFirstChildOfClass('Humanoid').PlatformStand = true end)
                    end
                    if CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0 or CONTROL.Q + CONTROL.E ~= 0 then
                        SPEED = 50
                    elseif not (CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0 or CONTROL.Q + CONTROL.E ~= 0) and SPEED ~= 0 then
                        SPEED = 0
                    end
                    if (CONTROL.L + CONTROL.R) ~= 0 or (CONTROL.F + CONTROL.B) ~= 0 or (CONTROL.Q + CONTROL.E) ~= 0 then
                        BV.Velocity = ((workspace.CurrentCamera.CFrame.lookVector * (CONTROL.F + CONTROL.B)) + (workspace.CurrentCamera.CFrame.rightVector * (CONTROL.L + CONTROL.R)) + Vector3.new(0, (CONTROL.Q + CONTROL.E) * 0.2, 0)) * SPEED
                        lCONTROL = {F = CONTROL.F, B = CONTROL.B, L = CONTROL.L, R = CONTROL.R, Q = CONTROL.Q, E = CONTROL.E}
                    elseif (CONTROL.L + CONTROL.R) == 0 and (CONTROL.F + CONTROL.B) == 0 and (CONTROL.Q + CONTROL.E) == 0 and SPEED ~= 0 then
                        BV.Velocity = ((workspace.CurrentCamera.CFrame.lookVector * (lCONTROL.F + lCONTROL.B)) + (workspace.CurrentCamera.CFrame.rightVector * (lCONTROL.L + lCONTROL.R)) + Vector3.new(0, (lCONTROL.Q + lCONTROL.E) * 0.2, 0)) * SPEED
                    else
                        BV.Velocity = Vector3.new(0, 0, 0)
                    end
                    BG.CFrame = workspace.CurrentCamera.CFrame
                until not FLYING
                CONTROL = {F = 0, B = 0, L = 0, R = 0, Q = 0, E = 0}
                lCONTROL = {F = 0, B = 0, L = 0, R = 0, Q = 0, E = 0}
                SPEED = 0
                pcall(function() BG:Destroy() end)
                pcall(function() BV:Destroy() end)
                if player.Character:FindFirstChildOfClass('Humanoid') then
                    player.Character:FindFirstChildOfClass('Humanoid').PlatformStand = false
                end
            end)
        end

        flyKeyDown = IYMouse.KeyDown:Connect(function(KEY)
            local key = KEY:lower()
            if key == 'w' then
                CONTROL.F = (vfly and vehicleflyspeed or iyflyspeed)
            elseif key == 's' then
                CONTROL.B = -(vfly and vehicleflyspeed or iyflyspeed)
            elseif key == 'a' then
                CONTROL.L = -(vfly and vehicleflyspeed or iyflyspeed)
            elseif key == 'd' then
                CONTROL.R = (vfly and vehicleflyspeed or iyflyspeed)
            elseif QEfly and key == 'e' then
                CONTROL.Q = (vfly and vehicleflyspeed or iyflyspeed)*2
            elseif QEfly and key == 'q' then
                CONTROL.E = -(vfly and vehicleflyspeed or iyflyspeed)*2
            end
            pcall(function() workspace.CurrentCamera.CameraType = Enum.CameraType.Track end)
        end)

        flyKeyUp = IYMouse.KeyUp:Connect(function(KEY)
            local key = KEY:lower()
            if key == 'w' then CONTROL.F = 0
            elseif key == 's' then CONTROL.B = 0
            elseif key == 'a' then CONTROL.L = 0
            elseif key == 'd' then CONTROL.R = 0
            elseif key == 'e' then CONTROL.Q = 0
            elseif key == 'q' then CONTROL.E = 0 end
        end)

        FLY()
    end

    local function NOFLY()
        FLYING = false
        pcall(function()
            if flyKeyDown then flyKeyDown:Disconnect() end
            if flyKeyUp then flyKeyUp:Disconnect() end
        end)
        if player.Character and player.Character:FindFirstChildOfClass('Humanoid') then
            pcall(function() player.Character:FindFirstChildOfClass('Humanoid').PlatformStand = false end)
        end
        pcall(function() workspace.CurrentCamera.CameraType = Enum.CameraType.Custom end)
    end

    -- Mobile fly helpers
    local velocityHandlerName = "_iy_fly_v"
    local gyroHandlerName = "_iy_fly_g"

    local function unmobilefly(speaker)
        pcall(function()
            if not (speaker and speaker.Character) then return end
            local root = getRoot(speaker.Character)
            if root and root:FindFirstChild(velocityHandlerName) then root:FindFirstChild(velocityHandlerName):Destroy() end
            if root and root:FindFirstChild(gyroHandlerName) then root:FindFirstChild(gyroHandlerName):Destroy() end
            if speaker.Character:FindFirstChildWhichIsA("Humanoid") then
                speaker.Character:FindFirstChildWhichIsA("Humanoid").PlatformStand = false
            end
            if mfly1 then mfly1:Disconnect() mfly1 = nil end
            if mfly2 then mfly2:Disconnect() mfly2 = nil end
        end)
    end

    local function mobilefly(speaker, vfly)
        pcall(function() unmobilefly(speaker) end)
        FLYING = true
        if not (speaker and speaker.Character) then return end
        local root = getRoot(speaker.Character)
        if not root then return end
        local camera = workspace.CurrentCamera
        local v3none = Vector3.new()
        local v3zero = Vector3.new(0, 0, 0)
        local v3inf = Vector3.new(9e9, 9e9, 9e9)

        local controlModule = nil
        pcall(function()
            if speaker.PlayerScripts and speaker.PlayerScripts:FindFirstChild("PlayerModule") then
                controlModule = require(speaker.PlayerScripts:WaitForChild("PlayerModule"):WaitForChild("ControlModule"))
            end
        end)

        local bv = Instance.new("BodyVelocity")
        bv.Name = velocityHandlerName
        bv.Parent = root
        bv.MaxForce = v3zero
        bv.Velocity = v3zero

        local bg = Instance.new("BodyGyro")
        bg.Name = gyroHandlerName
        bg.Parent = root
        bg.MaxTorque = v3inf
        bg.P = 1000
        bg.D = 50

        mfly2 = RunService.RenderStepped:Connect(function()
            root = getRoot(speaker.Character)
            camera = workspace.CurrentCamera
            if speaker.Character and speaker.Character:FindFirstChildWhichIsA("Humanoid") and root and root:FindFirstChild(velocityHandlerName) and root:FindFirstChild(gyroHandlerName) then
                local humanoid = speaker.Character:FindFirstChildWhichIsA("Humanoid")
                local VelocityHandler = root:FindFirstChild(velocityHandlerName)
                local GyroHandler = root:FindFirstChild(gyroHandlerName)

                VelocityHandler.MaxForce = v3inf
                GyroHandler.MaxTorque = v3inf
                if not vfly then pcall(function() humanoid.PlatformStand = true end) end
                GyroHandler.CFrame = camera.CFrame
                VelocityHandler.Velocity = v3none

                local direction = Vector3.new()
                if controlModule then
                    local dv = controlModule:GetMoveVector()
                    direction = Vector3.new(dv.X, 0, dv.Z)
                else
                    if humanoid and humanoid.MoveDirection and humanoid.MoveDirection.Magnitude > 0 then
                        direction = Vector3.new(humanoid.MoveDirection.X, 0, humanoid.MoveDirection.Z)
                    end
                end

                if direction.X ~= 0 then
                    VelocityHandler.Velocity = VelocityHandler.Velocity + camera.CFrame.rightVector * (direction.X * ((vfly and vehicleflyspeed or iyflyspeed) * 50))
                end
                if direction.Z ~= 0 then
                    VelocityHandler.Velocity = VelocityHandler.Velocity - camera.CFrame.lookVector * (direction.Z * ((vfly and vehicleflyspeed or iyflyspeed) * 50))
                end
                if state.verticalFly ~= 0 then
                    VelocityHandler.Velocity = VelocityHandler.Velocity + Vector3.new(0, state.verticalFly * ((vfly and vehicleflyspeed or iyflyspeed) * 50), 0)
                end
            end
        end)
    end

    return {
        sFLY = sFLY,
        NOFLY = NOFLY,
        mobilefly = mobilefly,
        unmobilefly = unmobilefly,
        setSpeed = function(n) iyflyspeed = n end,
        setVehicleSpeed = function(n) vehicleflyspeed = n end,
    }
end)()

-- === Character Respawn Handler ===
player.CharacterAdded:Connect(function(char)
    task.wait(0.6)

    -- Re-apply speed settings
    if state.speedHackEnabled then
        task.wait(0.2)
        local humanoid = char:FindFirstChildOfClass("Humanoid")
        if humanoid then
            humanoid.WalkSpeed = state.speedHackValue
        end
    else
        local humanoid = char:FindFirstChildOfClass("Humanoid")
        if humanoid then
            humanoid.WalkSpeed = state.normalWalkSpeed
        end
    end
    
    -- Re-apply fly if enabled
    if state.flyEnabled then
        task.wait(0.5)
        if UserInputService.TouchEnabled then
            FlyModule.mobilefly(player, false)
            createFlyButtons()
        else
            FlyModule.sFLY(false)
        end
    end
    
    -- Re-apply admin title if enabled
    if state.adminTitleEnabled then
        task.delay(0.1, function()
            if state.adminTitleEnabled then
                createAdminTitle()
            end
        end)
    end
end)

-- == Fake Admin Title ==
local function removeAdminTitle()
    if adminGui and adminGui.Parent then
        pcall(function() adminGui:Destroy() end)
    end
    adminGui = nil
end

local function createAdminTitle()
    removeAdminTitle()
    if not (player and player.Character) then return end
    local char = player.Character
    local head = char:FindFirstChild("Head")
    if not head then return end

    local billboard = Instance.new("BillboardGui")
    billboard.Name = "NERO_AdminTitle"
    billboard.Adornee = head
    billboard.AlwaysOnTop = true
    billboard.Size = UDim2.new(0, 200, 0, 40)
    billboard.StudsOffset = Vector3.new(0, 2.1, 0)
    billboard.LightInfluence = 0

    local txt = Instance.new("TextLabel")
    txt.Name = "TitleLabel"
    txt.Size = UDim2.new(1, 0, 1, 0)
    txt.BackgroundTransparency = 1
    txt.Text = "Admin"
    txt.TextColor3 = Color3.fromRGB(0, 102, 255)
    txt.TextStrokeTransparency = 0
    txt.TextScaled = true
    txt.Font = Enum.Font.SourceSansBold
    txt.Parent = billboard

    billboard.Parent = head
    adminGui = billboard
end

-- === Mobile Jump Button ===
local function removeJumpButton()
    if jumpGui then pcall(function() jumpGui:Destroy() end) end
    jumpGui, jumpButton = nil, nil
end

local function createJumpButton()
    removeJumpButton()
    jumpGui = Instance.new("ScreenGui")
    jumpGui.Name = "NERO_JumpGui"
    jumpGui.ResetOnSpawn = false
    jumpGui.Parent = playerGui

    jumpButton = Instance.new("ImageButton")
    jumpButton.Name = "JumpBtn"
    jumpButton.Size = UDim2.new(0, 90, 0, 90)
    jumpButton.Position = UDim2.new(1, -100, 1, -120)
    jumpButton.AnchorPoint = Vector2.new(1, 1)
    jumpButton.BackgroundTransparency = 1
    jumpButton.Image = "rbxassetid://3926305904"
    jumpButton.Parent = jumpGui

    jumpButton.InputBegan:Connect(function(inp)
        if inp.UserInputType == Enum.UserInputType.Touch or inp.UserInputType == Enum.UserInputType.MouseButton1 then
            local h = player.Character and player.Character:FindFirstChildOfClass("Humanoid")
            if h then
                pcall(function()
                    h.UseJumpPower = true
                    h.JumpPower = state.JumpPower or 50
                    h:ChangeState(Enum.HumanoidStateType.Jumping)
                end)
            end
        end
    end)
end
-- == Rayfield UI Setup ==
local success, Rayfield = pcall(function()
    return loadstring(game:HttpGet("https://sirius.menu/rayfield"))()
end)

if not success or not Rayfield then
    warn("Rayfield failed to load.")
    return
end

local Window = Rayfield:CreateWindow({
    Name = "üõ°Ô∏è ShieldTeam | NERO Mount Daun",
    LoadingTitle = "ShieldTeam | NERO",
    LoadingSubtitle = "Ultimate Summit & Features Gunung",
    ConfigurationSaving = { Enabled = false }
})

-- Auto Summit Tab
local AutoTab = Window:CreateTab("Auto Summit", 4483362458)
AutoTab:CreateToggle({
    Name = "Auto Loop Summit",
    CurrentValue = false,
    Callback = function(val)
        running = val
        if val then task.spawn(loopSummit) end
    end
})
AutoTab:CreateButton({ Name = "Force Run Once", Callback = function() task.spawn(runRouteOnce) end })

-- Manual TP Tab
local ManualTab = Window:CreateTab("Manual TP", 4483362458)
for i, pos in ipairs(checkpoints) do
    ManualTab:CreateButton({
        Name = "Teleport CP"..i,
        Callback = function()
            teleportCharacter(player.Character, pos)
            Rayfield:Notify({Title="Teleport", Content="Teleported to CP"..i, Duration=2})
        end
    })
end

-- Main Features Tab
local MainTab = Window:CreateTab("Main", 4483362458)
MainTab:CreateToggle({
    Name = "Enable Jump (Mobile)",
    CurrentValue = state.EnableJump,
    Callback = function(v)
        state.EnableJump = v
        if v then 
            createJumpButton() 
        else 
            removeJumpButton() 
        end
        saveConfig() -- Note: saveConfig() belum ada di script ini
    end
})

-- LOKASI 4: Jump Power Input (Baris 668-684)
MainTab:CreateInput({
    Name = "Jump Power (number)",
    PlaceholderText = tostring(state.JumpPower),
    Callback = function(val)
        local n = tonumber(val)
        if n and n > 0 then
            state.JumpPower = n
            pcall(function()
                local h = player.Character and player.Character:FindFirstChildOfClass("Humanoid")
                if h then
                    h.UseJumpPower = true
                    h.JumpPower = n
                end
            end)
            Rayfield:Notify({Title = "Jump", Content = "JumpPower set to "..tostring(n), Duration = 2})
        else
            Rayfield:Notify({Title = "Jump", Content = "Input invalid", Duration = 2})
        end
    end
})
MainTab:CreateToggle({
    Name = "Infinity Jump",
    CurrentValue = false,
    Callback = function(v)
        state.infJump = v
        Rayfield:Notify({Title="Jump", Content=v and "Infinity jump enabled" or "Infinity jump disabled", Duration=2})
    end
})

MainTab:CreateToggle({
    Name = "ESP Player",
    CurrentValue = false,
    Callback = function(v)
        setESP(v)
        Rayfield:Notify({Title="ESP", Content=v and "Player ESP enabled" or "Player ESP disabled", Duration=2})
    end
})

MainTab:CreateToggle({
    Name = "Noclip",
    CurrentValue = false,
    Callback = function(v)
        state.noclipEnabled = v
        Rayfield:Notify({Title="Noclip", Content=v and "Noclip enabled" or "Noclip disabled", Duration=2})
    end
})

-- Movement Tab
local MovementTab = Window:CreateTab("Movement", 4483362458)

-- Fly System Controls
MovementTab:CreateInput({
    Name = "Fly Speed",
    PlaceholderText = "e.g. 1",
    Callback = function(val)
        local n = tonumber(val)
        if n and n > 0 then
            state.flySpeed = n
            FlyModule.setSpeed(n)
            Rayfield:Notify({Title="Fly", Content="Fly speed set to: " .. n, Duration=2})
        end
    end
})

MovementTab:CreateToggle({
    Name = "Fly Mode (InfinityYield Style)",
    CurrentValue = false,
    Callback = function(v)
        state.flyEnabled = v
        if v then
            FlyModule.setSpeed(state.flySpeed)
            if UserInputService.TouchEnabled then
                FlyModule.mobilefly(player, false)
                createFlyButtons()
                Rayfield:Notify({Title="Fly", Content="Mobile fly enabled with GUI buttons", Duration=3})
            else
                FlyModule.sFLY(false)
                Rayfield:Notify({Title="Fly", Content="PC fly enabled (WASD + QE)", Duration=3})
            end
        else
            if UserInputService.TouchEnabled then
                FlyModule.unmobilefly(player)
                removeFlyButtons()
            else
                FlyModule.NOFLY()
            end
            Rayfield:Notify({Title="Fly", Content="Fly mode disabled", Duration=2})
        end
    end
})

-- Speed Hack System
MovementTab:CreateInput({
    Name = "Speed Hack Value",
    PlaceholderText = "e.g. 100",
    Callback = function(val)
        local n = tonumber(val)
        if n and n > 0 then
            state.speedHackValue = n
            if state.speedHackEnabled and player.Character and player.Character:FindFirstChildOfClass("Humanoid") then
                player.Character:FindFirstChildOfClass("Humanoid").WalkSpeed = n
            end
            Rayfield:Notify({Title="Speed", Content="Speed hack value set to: " .. n, Duration=2})
        end
    end
})

MovementTab:CreateToggle({
    Name = "Speed Hack (Anti-Reset)",
    CurrentValue = false,
    Callback = function(v)
        state.speedHackEnabled = v
        if v then
            Rayfield:Notify({Title="Speed Hack", Content="Speed hack enabled: " .. state.speedHackValue .. " (Anti-Reset)", Duration=3})
        else
            Rayfield:Notify({Title="Speed Hack", Content="Speed hack disabled", Duration=2})
        end
    end
})

-- Special Tab
local SpecialTab = Window:CreateTab("Special", 4483362458)

-- Mobile Fly Controls (shown even on PC for manual control)
SpecialTab:CreateButton({
    Name = "Ascend (Manual)",
    Callback = function()
        state.verticalFly = 1
        task.delay(0.3, function() state.verticalFly = 0 end)
        Rayfield:Notify({Title="Fly", Content="Manual ascend", Duration=1})
    end
})

SpecialTab:CreateButton({
    Name = "Descend (Manual)",
    Callback = function()
        state.verticalFly = -1
        task.delay(0.3, function() state.verticalFly = 0 end)
        Rayfield:Notify({Title="Fly", Content="Manual descend", Duration=1})
    end
})

-- Enhanced Player Teleport System
SpecialTab:CreateSection("Enhanced Player Teleport")

-- Original Player Teleport System
SpecialTab:CreateInput({
    Name = "Teleport to Player",
    PlaceholderText = "Username or Display Name",
    Callback = function(text)
        state.tpUsername = text
    end
})

SpecialTab:CreateButton({
    Name = "Go To Player",
    Callback = function()
        local targetPlayer = findPlayerByName(state.tpUsername)
        if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
            teleportCharacter(player.Character, targetPlayer.Character.HumanoidRootPart.Position)
            Rayfield:Notify({
                Title="Teleport Success", 
                Content="Teleported to " .. targetPlayer.DisplayName .. " (@" .. targetPlayer.Name .. ")", 
                Duration=3
            })
        else
            Rayfield:Notify({
                Title="Teleport Failed", 
                Content="Player '" .. state.tpUsername .. "' not found or not spawned", 
                Duration=3
            })
        end
    end
})

-- Quick Teleport to Nearest Player
SpecialTab:CreateButton({
    Name = "üìç TP to Nearest Player",
    Callback = function()
        if not (player.Character and player.Character:FindFirstChild("HumanoidRootPart")) then
            Rayfield:Notify({Title="Error", Content="Your character is not spawned", Duration=2})
            return
        end
        
        local myPos = player.Character.HumanoidRootPart.Position
        local nearestPlayer = nil
        local nearestDistance = math.huge
        
        for _, plr in ipairs(Players:GetPlayers()) do
            if plr ~= player and plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
                local distance = (plr.Character.HumanoidRootPart.Position - myPos).Magnitude
                if distance < nearestDistance then
                    nearestDistance = distance
                    nearestPlayer = plr
                end
            end
        end
        
        if nearestPlayer then
            teleportCharacter(player.Character, nearestPlayer.Character.HumanoidRootPart.Position)
            Rayfield:Notify({
                Title="Teleport Success", 
                Content="Teleported to nearest player: " .. nearestPlayer.DisplayName .. " (Distance: " .. math.floor(nearestDistance) .. ")", 
                Duration=3
            })
        else
            Rayfield:Notify({
                Title="No Players Found", 
                Content="No other players are spawned in the server", 
                Duration=3
            })
        end
    end
})

-- Teleport All Players to You
SpecialTab:CreateButton({
    Name = "üåü Bring All Players to Me",
    Callback = function()
        if not (player.Character and player.Character:FindFirstChild("HumanoidRootPart")) then
            Rayfield:Notify({Title="Error", Content="Your character is not spawned", Duration=2})
            return
        end
        
        local myPos = player.Character.HumanoidRootPart.Position
        local teleportedCount = 0
        
        for _, plr in ipairs(Players:GetPlayers()) do
            if plr ~= player and plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
                -- Teleport other players to positions around you
                local offsetPos = myPos + Vector3.new(
                    math.random(-5, 5), 
                    0, 
                    math.random(-5, 5)
                )
                teleportCharacter(plr.Character, offsetPos)
                teleportedCount = teleportedCount + 1
            end
        end
        
        if teleportedCount > 0 then
            Rayfield:Notify({
                Title="Mass Teleport", 
                Content="Teleported " .. teleportedCount .. " players to your location", 
                Duration=3
            })
        else
            Rayfield:Notify({
                Title="No Players", 
                Content="No other players to teleport", 
                Duration=2
            })
        end
    end
})

-- List All Players with Quick TP Buttons
local playerButtonsCreated = {}

local function createQuickTPButtons()
    -- Clear old buttons reference
    playerButtonsCreated = {}
    
    local playerCount = 0
    for _, plr in ipairs(Players:GetPlayers()) do
        if plr ~= player then
            playerCount = playerCount + 1
            if playerCount <= 6 then -- Limit to 6 buttons to avoid UI clutter
                local displayText = plr.DisplayName .. " (@" .. plr.Name .. ")"
                
                SpecialTab:CreateButton({
                    Name = "üöÄ TP ‚Üí " .. (string.len(displayText) > 20 and string.sub(displayText, 1, 20) .. "..." or displayText),
                    Callback = function()
                        -- Double check player is still valid
                        local currentPlr = nil
                        for _, checkPlr in ipairs(Players:GetPlayers()) do
                            if checkPlr.Name == plr.Name then
                                currentPlr = checkPlr
                                break
                            end
                        end
                        
                        if currentPlr and currentPlr.Character and currentPlr.Character:FindFirstChild("HumanoidRootPart") then
                            teleportCharacter(player.Character, currentPlr.Character.HumanoidRootPart.Position)
                            Rayfield:Notify({
                                Title="Quick TP", 
                                Content="Teleported to " .. currentPlr.DisplayName, 
                                Duration=2
                            })
                        else
                            Rayfield:Notify({
                                Title="Player Not Found", 
                                Content=plr.DisplayName .. " left or not spawned", 
                                Duration=2
                            })
                        end
                    end
                })
                playerButtonsCreated[plr.Name] = true
            end
        end
    end
    
    if playerCount == 0 then
        SpecialTab:CreateParagraph({
            Title = "No Players Online",
            Content = "No other players found in the server. Join a server with more players!"
        })
    elseif playerCount > 6 then
        SpecialTab:CreateParagraph({
            Title = "Many Players Online",
            Content = "Server has " .. playerCount .. " players. Showing first 6 as buttons. Use manual teleport for others."
        })
    end
end

-- Create initial player buttons
createQuickTPButtons()

SpecialTab:CreateButton({
    Name = "üîÑ Refresh Quick TP Buttons",
    Callback = function()
        Rayfield:Notify({
            Title="Quick TP Buttons", 
            Content="Restart the script to see updated player buttons", 
            Duration=3
        })
    end
})

SpecialTab:CreateButton({
    Name = "üìã List All Players",
    Callback = function()
        local playerList = {}
        for _, plr in ipairs(Players:GetPlayers()) do
            if plr ~= player then
                table.insert(playerList, plr.DisplayName .. " (@" .. plr.Name .. ")")
            end
        end
        if #playerList > 0 then
            local listText = table.concat(playerList, ", ")
            if string.len(listText) > 100 then
                listText = string.sub(listText, 1, 100) .. "..."
            end
            Rayfield:Notify({
                Title="Players Online (" .. #playerList .. ")", 
                Content=listText, 
                Duration=5
            })
        else
            Rayfield:Notify({
                Title="Players Online", 
                Content="No other players found", 
                Duration=3
            })
        end
    end
})

-- Admin Title Toggle
SpecialTab:CreateToggle({
    Name = "Fake Title: Admin (Blue)",
    CurrentValue = false,
    Callback = function(v)
        state.adminTitleEnabled = v
        if v then
            createAdminTitle()
            Rayfield:Notify({Title="Admin Title", Content="Admin title enabled", Duration=2})
        else
            removeAdminTitle()
            Rayfield:Notify({Title="Admin Title", Content="Admin title disabled", Duration=2})
        end
    end
})

SpecialTab:CreateToggle({
    Name = "üõ°Ô∏è BYPASS ANTICHEAT",
    CurrentValue = false,
    Callback = function(v)
        state.anticheatBypassEnabled = v
        if v then
            pcall(function() 
                loadstring(game:HttpGet("https://raw.githubusercontent.com/hm5650/ACR/refs/heads/main/Acr", true))() 
            end)
            Rayfield:Notify({
                Title="Bypass Anticheat", 
                Content="Anticheat bypass enabled successfully!", 
                Duration=3
            })
        else
            Rayfield:Notify({
                Title="Bypass Anticheat", 
                Content="Anticheat bypass disabled", 
                Duration=2
            })
        end
    end
})

-- Settings Tab
local SettingsTab = Window:CreateTab("Settings", 4483362458)

SettingsTab:CreateButton({
    Name = "Reset All Settings",
    Callback = function()
        -- Reset all states
        state.running = false
        state.infJump = false
        setESP(false)
        state.noclipEnabled = false
        
        -- Disable fly
        if state.flyEnabled then
            state.flyEnabled = false
            if UserInputService.TouchEnabled then
                FlyModule.unmobilefly(player)
                removeFlyButtons()
            else
                FlyModule.NOFLY()
            end
        end
        
        -- Reset speeds
        state.speedHackEnabled = false
        state.normalWalkSpeed = 16
        state.speedHackValue = 100
        
        -- Remove admin title
        if state.adminTitleEnabled then
            state.adminTitleEnabled = false
            removeAdminTitle()
        end
        
        -- Apply normal walk speed
        if player.Character and player.Character:FindFirstChildOfClass("Humanoid") then
            player.Character:FindFirstChildOfClass("Humanoid").WalkSpeed = 16
        end
        
        Rayfield:Notify({Title="Settings", Content="All settings have been reset", Duration=3})
    end
})

SettingsTab:CreateButton({
    Name = "Show Current Status",
    Callback = function()
        local status = {
            "Summit: " .. (state.running and "ON" or "OFF"),
            "Jump: " .. (state.infJump and "ON" or "OFF"),
            "ESP: " .. (state.espEnabled and "ON" or "OFF"),
            "Noclip: " .. (state.noclipEnabled and "ON" or "OFF"),
            "Fly: " .. (state.flyEnabled and "ON" or "OFF"),
            "Speed: " .. (state.speedHackEnabled and "ON" or "OFF"),
            "Admin Title: " .. (state.adminTitleEnabled and "ON" or "OFF")
        }
        local statusText = table.concat(status, " | ")
        Rayfield:Notify({
            Title="Current Status", 
            Content=statusText, 
            Duration=5
        })
    end
})

-- Info Tab
local InfoTab = Window:CreateTab("Info", 4483362458)

InfoTab:CreateParagraph({
    Title = "üõ°Ô∏è NERO Ultimate Features",
    Content = "Auto Summit with carry support ‚Ä¢ InfinityYield-style fly ‚Ä¢ Anti-reset speed hack ‚Ä¢ Enhanced player teleport system ‚Ä¢ ESP & Noclip ‚Ä¢ Fake admin title"
})

InfoTab:CreateParagraph({
    Title = "üéÆ Controls (PC)",
    Content = "Fly: WASD (movement) + QE (up/down) ‚Ä¢ Mobile: Use GUI buttons or manual controls in Special tab"
})

InfoTab:CreateParagraph({
    Title = "üöÄ Enhanced Teleport Features",
    Content = "‚Ä¢ Quick TP buttons for nearby players ‚Ä¢ Teleport to nearest player ‚Ä¢ Bring all players to you ‚Ä¢ Manual teleport with username/display name search"
})

InfoTab:CreateParagraph({
    Title = "üîß Speed Hack",
    Content = "Anti-reset technology prevents speed from being reset by the game. Uses velocity backup if WalkSpeed fails."
})

InfoTab:CreateParagraph({
    Title = "‚ÑπÔ∏è Script Info",
    Content = "ShieldTeam | NERO GUNUNG DAUN- Enhanced with advanced player teleport system. For support, contact ShieldTeam developers."
})

-- Cleanup on script end or player leaving
game:GetService("Players").PlayerRemoving:Connect(function(plr)
    if plr == player then
        -- Cleanup fly
        if state.flyEnabled then
            FlyModule.NOFLY()
            FlyModule.unmobilefly(player)
            removeFlyButtons()
        end
        -- Cleanup GUI
        removeAdminTitle()
        -- Cleanup noclip
        disableNoclip()
    end
end)

-- Final initialization
task.delay(1, function()
    -- Set initial normal walk speed
    if player.Character and player.Character:FindFirstChildOfClass("Humanoid") then
        player.Character:FindFirstChildOfClass("Humanoid").WalkSpeed = state.normalWalkSpeed
    end
    
    -- Welcome notification
    Rayfield:Notify({
        Title="üõ°Ô∏è NERO Mount Daun", 
        Content="Loaded successfully! Enhanced player teleport system added. Check Info tab for controls.", 
        Duration=4
    })
end)